<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://vinsearch.eurotaxglass.com/vin-intl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://vinsearch.eurotaxglass.com/vin-intl" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://vinsearch.eurotaxglass.com/vin-intl">
      <xs:simpleType name="ISOcountryType">
        <xs:restriction base="xs:NMTOKEN">
          <xs:enumeration value="AT" />
          <xs:enumeration value="BE" />
          <xs:enumeration value="CZ" />
          <xs:enumeration value="CH" />
          <xs:enumeration value="DE" />
          <xs:enumeration value="ES" />
          <xs:enumeration value="FR" />
          <xs:enumeration value="GR" />
          <xs:enumeration value="HR" />
          <xs:enumeration value="HU" />
          <xs:enumeration value="IT" />
          <xs:enumeration value="LU" />
          <xs:enumeration value="NL" />
          <xs:enumeration value="PL" />
          <xs:enumeration value="PT" />
          <xs:enumeration value="RU" />
          <xs:enumeration value="SK" />
          <xs:enumeration value="SI" />
          <xs:enumeration value="UK" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ISOlanguageType">
        <xs:restriction base="xs:NMTOKEN">
          <xs:enumeration value="BG" />
          <xs:enumeration value="BR" />
          <xs:enumeration value="CS" />
          <xs:enumeration value="CZ" />
          <xs:enumeration value="DA" />
          <xs:enumeration value="DE" />
          <xs:enumeration value="EL" />
          <xs:enumeration value="EN" />
          <xs:enumeration value="ES" />
          <xs:enumeration value="ET" />
          <xs:enumeration value="FI" />
          <xs:enumeration value="FR" />
          <xs:enumeration value="HR" />
          <xs:enumeration value="HU" />
          <xs:enumeration value="IT" />
          <xs:enumeration value="LT" />
          <xs:enumeration value="LV" />
          <xs:enumeration value="NL" />
          <xs:enumeration value="NO" />
          <xs:enumeration value="PL" />
          <xs:enumeration value="PT" />
          <xs:enumeration value="RO" />
          <xs:enumeration value="RU" />
          <xs:enumeration value="SK" />
          <xs:enumeration value="SL" />
          <xs:enumeration value="SR" />
          <xs:enumeration value="SV" />
          <xs:enumeration value="TR" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="VersionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="1.1.0" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="VinCodeType">
        <xs:annotation>
          <xs:documentation>VIN Code</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:maxLength value="17" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ETGCodeType">
        <xs:restriction base="xs:string">
          <xs:maxLength value="13" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="VersionRequestInputType">
        <xs:sequence>
          <xs:element name="Settings" type="tns:ETGsettingType" />
          <xs:element minOccurs="1" maxOccurs="1" name="ServiceId" type="xs:string">
            <xs:annotation>
              <xs:documentation>User- or Servicekey to identify caller. Used for billing and ACL
                                restrictions.
                                Format: COMPANY-APPLICATION-ENVIRONMENT-SECRET:SUFFIX
                                Where COMPANY,APPLICATION,SECRET delivered by ETG,
                                ENVIRONMENT - one of: proto,dev,test,preprod,live
                                SUFFIX - Optional any string, consists of letter,numbers or following chars: ".", "-", "
                                ", ","
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VinDecodeInputType">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="Settings" type="tns:ETGsettingType">
            <xs:annotation>
              <xs:documentation>Required field with request settings</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="VinCode" type="tns:VinCodeType">
            <xs:annotation>
              <xs:documentation>VIN to process</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TypeETGCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                                This field has to be used in a second
                                request using the same VIN to specify
                                one vehicle out of a former resulting
                                list of vehicles (SchwackeCode, NatCode, ETG Code)
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="ExtendedOutput" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
                                true = output of webservice will include
                                all defined technical fields of vehicle
                                and option descriptions; false = output
                                contains only the minimum of defined
                                fields
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="InputStream1" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                                Optional input stream which will be used
                                instead of calling the official
                                manufacturer VIN webservice. Format must
                                be identical to output of manufacturer
                                VIN webservice. Empty in normal case
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="InputStream2" type="xs:string">
            <xs:annotation>
              <xs:documentation>the same as InputStream1</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ServiceCode" type="xs:int">
            <xs:annotation>
              <xs:documentation>change behavoiur of weservice itself or only logging part.
                                Request's variable "ServiceId" should allow setting ServiceCode

                                SERVICECODE_ERROR = 1; // bad failures, exceptions and so on
                                SERVICECODE_WARNING = 2; // not very bad failures, that can change result
                                SERVICECODE_NOCACHE = 32; // do not use local cache
                                SERVICECODE_NOREQUEST = 64; // do not request remote servers
                                SERVICECODE_DEBUG_INOUT = 128; // show incoming request / outgoing result
                                SERVICECODE_DEBUG_FUNC1 = 256; // show only main functions call/return
                                SERVICECODE_DEBUG_FUNC2 = 512; // show only middle functions call/return
                                SERVICECODE_DEBUG_FUNC3 = 1024; // show only small functions call/return
                                SERVICECODE_DEBUG_NET = 2048; // network/disk/cache IO
                                SERVICECODE_DEBUG_SQL = 4096; // SQL queries
                                SERVICECODE_INFO1 = 8192; // Program workflow (less debug)
                                SERVICECODE_INFO2 = 16384; // Program workflow (more debug)
                                SERVICECODE_INFO3 = 32768; // Program workflow (more debug)
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="ValuationData" type="tns:ValuationBasicType">
            <xs:annotation>
              <xs:documentation>Valuation of vehicle can be done by filling this structure. If it's empty
                                - no valuation will be proceed
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="ExpectedMakeId" type="xs:short">
            <xs:annotation>
              <xs:documentation>
                                EurotaxGlass's MakeId which is the
                                EXPECTED value of the caller after
                                decoding the VIN.

                                The webservice will only continue if the
                                ExpectedMakeId is equal to the decoded
                                MakeId based on the VIN decoder phase 1,
                                otherwise it returns failure. This is important
                                if you want to ensure that no call to
                                the manufacturer is made until the VIN
                                is part of the EXPECTED
                                Manufacturer/MakeId.

                                This feature is also useful for the
                                client to compare a pre-selected Make
                                (ETG based) with the decoded Make based
                                on the VIN without the need to implement
                                the VIN decode logic (step 1) by itself.
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="ServiceId" type="xs:string">
            <xs:annotation>
              <xs:documentation>User- or Servicekey to identify caller. Used for billing and ACL
                                restrictions.
                                Format: COMPANY-APPLICATION-ENVIRONMENT-SECRET:SUFFIX
                                Where COMPANY,APPLICATION,SECRET delivered by ETG,
                                ENVIRONMENT - one of: proto,dev,test,preprod,live
                                SUFFIX - Optional any string, consists of letter,numbers or following chars: ".", "-", "
                                ", ","
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="EQBehavior" type="xs:short">
            <xs:annotation>
              <xs:documentation>Change the internal equipment behavior,
                                if there is more then one clearly result
                                this flag decides which result to use.

                                0 = Behavior as today, no change in equipment logic.
                                1 = Return the cheapest equipment.
                                2 = Return the expensive equipment.
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VinDecodeOutputType">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="Settings" type="tns:ETGsettingType">
            <xs:annotation>
              <xs:documentation>
                                Settings, which VinSearch used to process this VIN
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="VinCode" type="tns:VinCodeType">
            <xs:annotation>
              <xs:documentation>VIN Code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Vehicle" type="tns:VehicleType">
            <xs:annotation>
              <xs:documentation>
                                Array with vehicles, which are found
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Equipment" type="tns:EquipmentType">
            <xs:annotation>
              <xs:documentation>
                                Equipment, found via direct in-country mapping
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Esaco" type="tns:EsacoType">
            <xs:annotation>
              <xs:documentation>
                                Esacos, extracted from field "Equipment"
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="StatusCode" type="xs:short">
            <xs:annotation>
              <xs:documentation>
                                0 - No error; 1 - Fatal/configuration error. Admin
                                help required; 2 - Temporary failure like failed
                                DB/third party WS connection. Please retry later or
                                call Admin; 3 - Input data error. Invalid VIN or
                                nothing returned from DB/third party WS for this
                                VIN. Please try other input data or call Admin; 999
                                - Unknown failure. Please call Richter und Poweleit
                                GmbH;
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="StatusMsg" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                                description of error
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="DebugOutput" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                                Error tag for later investigtion of problems
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="extEquipment" type="tns:EquipmentType">
            <xs:annotation>
              <xs:documentation>
                                Equipment, found via cross-country mapping
                                (reference market). Not always perfect
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="extEsaco" type="tns:EsacoType">
            <xs:annotation>
              <xs:documentation>
                                Esacos, extracted from extEquipment
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="ValuationResponse" type="tns:ValuationResponseType">
            <xs:annotation>
              <xs:documentation>Valuation values</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="DetectedMakeId" type="xs:short">
            <xs:annotation>
              <xs:documentation>
                                EurotaxGlass's MakeId which is DETECTED after
                                decoding the VIN.

                                This is useful for the client to compare a
                                pre-selected Make (ETG data based) with the decoded
                                Make based on the VIN without the need to implement
                                the VIN decode logic by itself.
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ManufOriginData" type="tns:ManufacturerInfoType">
            <xs:annotation>
              <xs:documentation>
                                Structure of original Manufacturer Equipment Answer
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="ManufUnknownEquipment" type="tns:ManufacturerInfoType">
            <xs:annotation>
              <xs:documentation>
                                Equipment, which cannot be detected or parsed by
                                VinSearch engine
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="ProductionDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>
                                Production date of vehicle, if available
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="DeliveryDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>
                                Delivery date, if available If not available,
                                RegistrationDate, SellDate or similar date will be
                                used, if available
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="RegistrationDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>Registration Date of Vehicle, used in internal mapping (e.g. VehicleType,
                                EquipmentOptions).
                                If not delivered by Manufacturer, one of DeliveryDate or ProductionDate will be used.
                                It can be changed by the system to the nearest border of Vehicle-&gt;PeriodOfBuild Dates if
                                original RegistrationDate was out of the borders.
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="ColourDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                                Text description of colour, returned by Manufacturer
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="ColourCode" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="UpholsteryDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                                Text description of colour, returned by Manufacturer
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="UpholsteryCode" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="TopDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                                Description of Top Colour, returned by Manufacturer
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="TopCode" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="DeliveryCountry" type="tns:ISOcountryType">
            <xs:annotation>
              <xs:documentation>ISO country code of delivery market</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="VOC" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VehicleType">
        <xs:annotation>
          <xs:documentation>Manufacturer data decoded from the VIN code</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="TypeETGCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>ETG Code (SchwackeCode, NatCode) of found vehicle</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="VehType" type="xs:string">
            <xs:annotation>
              <xs:documentation>ETG Vehicle Type Code of found vehicle</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MakeDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>Description of manufacturer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ModelDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>Description of model
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="TypeDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>description of type of model
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EngineSize" type="xs:short">
            <xs:annotation>
              <xs:documentation>engine size in ccm
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EnginePS" type="xs:short">
            <xs:annotation>
              <xs:documentation>engine power in PS</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EngineKW" type="xs:short">
            <xs:annotation>
              <xs:documentation>engine power in KW</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PeriodOfBuild" type="xs:string">
            <xs:annotation>
              <xs:documentation>when this model were produced</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="FuelType" type="xs:string">
            <xs:annotation>
              <xs:documentation>Fuel type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BodyType" type="xs:string">
            <xs:annotation>
              <xs:documentation>body type (limousine, cabrio, etc..)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NumberDoors" type="xs:short">
            <xs:annotation>
              <xs:documentation>number of doors</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="NumberGears" type="xs:short">
            <xs:annotation>
              <xs:documentation>number of gears</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="GearType" type="xs:string">
            <xs:annotation>
              <xs:documentation>Gearbox type (automatic, manual)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="PeriodOfBuildDetails" type="tns:PeriodOfBuildDetailsType">
            <xs:annotation>
              <xs:documentation>
                                The Period of build using dedicated
                                fields for month and year instead of
                                string (see also "PeriodOfBuild"). If
                                PoBUntilMonth and -Year is missing, the
                                vehicle is still build without a actual
                                limitation from manufacturer.
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="PriceNetto" type="xs:decimal">
            <xs:annotation>
              <xs:documentation>Price of new vehicle in the production time</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="PriceBrutto" type="xs:decimal">
            <xs:annotation>
              <xs:documentation>Price of new vehicle in the production time</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ETGsettingType">
        <xs:annotation>
          <xs:documentation>Settings for country, language, response format etc.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="ISOcountryCode" type="tns:ISOcountryType">
            <xs:annotation>
              <xs:documentation>ISO country code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="ISOlanguageCode" type="tns:ISOlanguageType">
            <xs:annotation>
              <xs:documentation>ISO language code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="CheckForIddLoadFlag" type="xs:int">
            <xs:annotation>
              <xs:documentation>Flags whether to check if an IDD load is in progress before executing
                                search. 1 if check is requested.
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ETGversionInformationType">
        <xs:sequence>
          <xs:element name="Settings" type="tns:ETGsettingType" />
          <xs:element name="ServiceVersion" type="xs:string">
            <xs:annotation>
              <xs:documentation>Version of program</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="IntelligenceVersion" type="xs:string">
            <xs:annotation>
              <xs:documentation>Version of mapping logic</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DataReleaseDate" type="tns:ETGdateType">
            <xs:annotation>
              <xs:documentation>Version of IDD data</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ETGdateType">
        <xs:annotation>
          <xs:documentation>Common data type for date representation</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="Day" type="xs:gDay">
            <xs:annotation>
              <xs:documentation>day of the month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Month" type="xs:gMonth">
            <xs:annotation>
              <xs:documentation>month</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Year" type="xs:gYear">
            <xs:annotation>
              <xs:documentation>year</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoginDataType">
        <xs:sequence>
          <xs:element name="Name" type="xs:string">
            <xs:annotation>
              <xs:documentation>ETG-wide unique user name</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Password" type="xs:string">
            <xs:annotation>
              <xs:documentation>User password</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OriginatorType">
        <xs:sequence>
          <xs:element name="Signature" type="xs:string">
            <xs:annotation>
              <xs:documentation>ETG-wide unique user ID / user signature</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="LoginData" type="tns:LoginDataType">
            <xs:annotation>
              <xs:documentation>User authentication data</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FailureType">
        <xs:sequence>
          <xs:element name="ETGError" type="tns:ETGStatus" />
          <xs:element minOccurs="0" name="ETGWarning" type="tns:ETGStatus" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SuccessType">
        <xs:sequence minOccurs="0">
          <xs:element minOccurs="0" name="ETGWarning" type="tns:ETGStatus" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="VersionResponse" type="xs:string">
            <xs:annotation>
              <xs:documentation>Version of global ETG services specification used to construct the
                                response
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Statistics" type="tns:StatisticsType" />
          <xs:choice>
            <xs:element name="Failure" type="tns:FailureType">
              <xs:annotation>
                <xs:documentation>Indicates that the processing of this request has failed, and provides
                                    error and optional warning messages that arose during the processing.
                                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Success" type="tns:SuccessType">
              <xs:annotation>
                <xs:documentation>Indicates that the processing of this request has succeeded; may
                                    provide non-fatal warning messages that arose during the processing.
                                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatisticsType">
        <xs:sequence>
          <xs:element name="StartDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Processing start timestamp</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="EndDateTime" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Processing finish timestamp</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ETGStatus">
        <xs:annotation>
          <xs:documentation>Placeholder for general status report. To be filled out before sending a response
                        back to the originator.
                    </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="Code" type="xs:int">
            <xs:annotation>
              <xs:documentation>Top level error or warning code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Description" type="xs:string">
            <xs:annotation>
              <xs:documentation>Top level error or warning description</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExtCode" type="xs:int">
            <xs:annotation>
              <xs:documentation>Extended error or warning code. Can be service specific</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExtDescription" type="xs:string">
            <xs:annotation>
              <xs:documentation>Extended error or warning description.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ETGHeaderType">
        <xs:sequence>
          <xs:element name="VersionRequest" type="tns:VersionType" />
          <xs:element name="Originator" type="tns:OriginatorType" />
          <xs:element minOccurs="0" name="Response" type="tns:ResponseType" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ETGHeader" type="tns:ETGHeaderType" />
      <xs:element name="Settings" type="tns:ETGsettingType">
        <xs:annotation>
          <xs:documentation>Settings for country (market), language, response format etc.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="VersionInformation" type="tns:ETGversionInformationType" />
      <xs:element name="VersionRequest" type="tns:VersionRequestInputType" />
      <xs:element name="Request" type="tns:VinDecodeInputType" />
      <xs:element name="Result" type="tns:VinDecodeOutputType" />
      <xs:complexType name="EquipmentType">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="ManufCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>Manufacturer internal code (ordercode)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="SoaCode" type="xs:int">
            <xs:annotation>
              <xs:documentation>Soa Code (SA Code, ETG EQ Code) of this equipment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="DeliveryFlag" type="xs:short">
            <xs:annotation>
              <xs:documentation>
                                0 - Standart / serial equipment; 1 -
                                Standart option / free; 2 - Option at
                                extra charge; 3 - Option price not
                                given; 4 - Option not available yet; 5 -
                                Mandatory at extra charge;
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="PriceNetto" type="xs:decimal">
            <xs:annotation>
              <xs:documentation>Price of option in production time</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="PriceBrutto" type="xs:decimal">
            <xs:annotation>
              <xs:documentation>Price of option in production time</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="Begin" type="xs:string">
            <xs:annotation>
              <xs:documentation>Period of build</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="End" type="xs:string">
            <xs:annotation>
              <xs:documentation>Period of build</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="PackageFlag" type="xs:string">
            <xs:annotation>
              <xs:documentation>1 - this equipment is a package of other equipments
                                0 - stand-alone equipment
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="Merchantability" type="xs:short">
            <xs:annotation>
              <xs:documentation>merchantability</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="Description" type="xs:string">
            <xs:annotation>
              <xs:documentation>description of equipment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Esaco" type="tns:EsacoType">
            <xs:annotation>
              <xs:documentation>Esaco codes of this equipment</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EsacoType">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Code" type="xs:string">
            <xs:annotation>
              <xs:documentation>Esaco code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="Desc" type="xs:string">
            <xs:annotation>
              <xs:documentation>Esaco Description</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ValuationBasicType">
        <xs:sequence>
          <xs:element name="FirstRegYear" type="xs:short">
            <xs:annotation>
              <xs:documentation>Registration year of vehicle. required only if valuation should be done
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="FirstRegMonth" type="xs:short">
            <xs:annotation>
              <xs:documentation>Registration month of vehicle. required only if valuation should be done
                            </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="KilometersDriven" type="xs:int">
            <xs:annotation>
              <xs:documentation>KM. required only if valuation should be done</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ValuationResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="TradeAmount" type="xs:double" />
          <xs:element minOccurs="0" maxOccurs="1" name="RetailAmount" type="xs:double" />
          <xs:element minOccurs="0" maxOccurs="1" name="AverageMileage" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PeriodOfBuildDetailsType">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="PoBFromMonth" type="xs:short" />
          <xs:element minOccurs="1" maxOccurs="1" name="PoBFromYear" type="xs:short" />
          <xs:element minOccurs="0" maxOccurs="1" name="PoBUntilMonth" type="xs:short" />
          <xs:element minOccurs="0" maxOccurs="1" name="PoBUntilYear" type="xs:short" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ManufacturerInfoType">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="OrderCode" type="xs:string">
            <xs:annotation>
              <xs:documentation>Original order code of equipment of manufacturer</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="1" name="EquipmentDesc" type="xs:string">
            <xs:annotation>
              <xs:documentation>Original equipment description of manufacturer</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetCache">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="ServiceCode" type="xs:int" />
            <xs:element minOccurs="1" maxOccurs="1" name="ServiceId" type="xs:string">
              <xs:annotation>
                <xs:documentation>Please check field ServiceId in method 'Decode'</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetCacheResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="vins" type="tns:VinCodeType">
              <xs:annotation>
                <xs:documentation>Vins in cache</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" maxOccurs="1" name="StatusMsg" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="StatusCode" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetLog">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="in" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetLogResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="out" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetMarkets">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="ServiceId" type="xs:string">
              <xs:annotation>
                <xs:documentation>Please check field ServiceId in method 'Decode'</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetMarketsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="Market" type="tns:ETGsettingType">
              <xs:annotation>
                <xs:documentation>market description</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="1" maxOccurs="1" name="StatusCode" type="xs:short" />
            <xs:element minOccurs="1" maxOccurs="1" name="StatusMsg" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="ServiceHeader">
    <wsdl:part name="etg_header" element="tns:ETGHeader" />
  </wsdl:message>
  <wsdl:message name="VinDecodeRequest">
    <wsdl:part name="vinRequest" element="tns:Request" />
  </wsdl:message>
  <wsdl:message name="VinDecodeResponse">
    <wsdl:part name="vinResult" element="tns:Result" />
  </wsdl:message>
  <wsdl:message name="GetVersionRequest">
    <wsdl:part name="versionRequest" element="tns:VersionRequest" />
  </wsdl:message>
  <wsdl:message name="GetVersionResponse">
    <wsdl:part name="versionInformation" element="tns:VersionInformation" />
  </wsdl:message>
  <wsdl:message name="GetCacheRequest">
    <wsdl:part name="GetCache" element="tns:GetCache" />
  </wsdl:message>
  <wsdl:message name="GetCacheResponse">
    <wsdl:part name="GetCacheResponse" element="tns:GetCacheResponse" />
  </wsdl:message>
  <wsdl:message name="GetLogRequest">
    <wsdl:part name="parameters" element="tns:GetLog" />
  </wsdl:message>
  <wsdl:message name="GetLogResponse">
    <wsdl:part name="parameters" element="tns:GetLogResponse" />
  </wsdl:message>
  <wsdl:message name="GetMarketsRequest">
    <wsdl:part name="parameters" element="tns:GetMarkets" />
  </wsdl:message>
  <wsdl:message name="GetMarketsResponse">
    <wsdl:part name="parameters" element="tns:GetMarketsResponse" />
  </wsdl:message>
  <wsdl:portType name="vinsearchSoapPort">
    <wsdl:operation name="VinDecode">
      <wsdl:documentation>Main function to map VIN code to ETG dat</wsdl:documentation>
      <wsdl:input message="tns:VinDecodeRequest" />
      <wsdl:output message="tns:VinDecodeResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetVersion">
      <wsdl:documentation>Get version of Program, interne logic, IDD Dat</wsdl:documentation>
      <wsdl:input message="tns:GetVersionRequest" />
      <wsdl:output message="tns:GetVersionResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetCache">
      <wsdl:documentation>Internal function to fetch cached VINs. ServiceCode field dependend.
            </wsdl:documentation>
      <wsdl:input message="tns:GetCacheRequest" />
      <wsdl:output message="tns:GetCacheResponse" />
    </wsdl:operation>
    <wsdl:operation name="GetMarkets">
      <wsdl:documentation>Get markets, available in VinSearch</wsdl:documentation>
      <wsdl:input message="tns:GetMarketsRequest" />
      <wsdl:output message="tns:GetMarketsResponse" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="vinsearchBinding" type="tns:vinsearchSoapPort">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="VinDecode">
      <soap:operation soapAction="http://vinsearch.eurotaxglass.com/vin-intl/VinDecode" />
      <wsdl:input>
        <soap:header message="tns:ServiceHeader" part="etg_header" use="literal" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:ServiceHeader" part="etg_header" use="literal" />
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetVersion">
      <soap:operation soapAction="http://vinsearch.eurotaxglass.com/vin-intl/GetVersion" />
      <wsdl:input>
        <soap:header message="tns:ServiceHeader" part="etg_header" use="literal" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:ServiceHeader" part="etg_header" use="literal" />
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCache">
      <soap:operation soapAction="http://vinsearch.eurotaxglass.com/vin-intl/GetCache" />
      <wsdl:input>
        <soap:header message="tns:ServiceHeader" part="etg_header" use="literal" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:ServiceHeader" part="etg_header" use="literal" />
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetMarkets">
      <soap:operation soapAction="http://vinsearch.eurotaxglass.com/vin-intl/GetMarkets" />
      <wsdl:input>
        <soap:header message="tns:ServiceHeader" part="etg_header" use="literal" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:header message="tns:ServiceHeader" part="etg_header" use="literal" />
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="VinSearch">
    <wsdl:port name="vinsearch" binding="tns:vinsearchBinding">
      <soap:address location="http://vinsearch.eurotaxglass.com/vin-intl/" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>