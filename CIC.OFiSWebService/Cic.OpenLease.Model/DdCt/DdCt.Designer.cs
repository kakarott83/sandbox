//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Cic.OpenLease.Model.DdCt", "CTTSTATEDEF_CTSTATEDEF", "CTSTATEDEF", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cic.OpenLease.Model.DdCt.CTSTATEDEF), "CTTSTATEDEF", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cic.OpenLease.Model.DdCt.CTTSTATEDEF))]
[assembly: EdmRelationshipAttribute("Cic.OpenLease.Model.DdCt", "CTTATTRIBUTDEF_CTATTRIBUTDEF", "CTATTRIBUTDEF", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cic.OpenLease.Model.DdCt.CTATTRIBUTDEF), "CTTATTRIBUTDEF", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cic.OpenLease.Model.DdCt.CTTATTRIBUTDEF))]
[assembly: EdmRelationshipAttribute("Cic.OpenLease.Model.DdCt", "CTTSTATEDEF_CTLANG", "CTLANG", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cic.OpenLease.Model.DdCt.CTLANG), "CTTSTATEDEF", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cic.OpenLease.Model.DdCt.CTTSTATEDEF))]
[assembly: EdmRelationshipAttribute("Cic.OpenLease.Model.DdCt", "CTTATTRIBUTDEF_CTLANG", "CTLANG", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cic.OpenLease.Model.DdCt.CTLANG), "CTTATTRIBUTDEF", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cic.OpenLease.Model.DdCt.CTTATTRIBUTDEF))]
[assembly: EdmRelationshipAttribute("Cic.OpenLease.Model.DdCt", "CTTMESSAGE_CTLANG", "CTLANG", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cic.OpenLease.Model.DdCt.CTLANG), "CTTMESSAGE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cic.OpenLease.Model.DdCt.CTTMESSAGE))]
[assembly: EdmRelationshipAttribute("Cic.OpenLease.Model.DdCt", "CTTFOID_CTLANG", "CTLANG", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cic.OpenLease.Model.DdCt.CTLANG), "CTTFOID", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cic.OpenLease.Model.DdCt.CTTFOID))]
[assembly: EdmRelationshipAttribute("Cic.OpenLease.Model.DdCt", "CTTWEB_CTLANG", "CTLANG", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cic.OpenLease.Model.DdCt.CTLANG), "CTTWEB", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cic.OpenLease.Model.DdCt.CTTWEB))]
[assembly: EdmRelationshipAttribute("Cic.OpenLease.Model.DdCt", "CTTWEB_CTWEB", "CTWEB", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cic.OpenLease.Model.DdCt.CTWEB), "CTTWEB", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cic.OpenLease.Model.DdCt.CTTWEB))]

#endregion

namespace Cic.OpenLease.Model.DdCt
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CtEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CtEntities object using the connection string found in the 'CtEntities' section of the application configuration file.
        /// </summary>
        public CtEntities() : base("name=CtEntities", "CtEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CtEntities object.
        /// </summary>
        public CtEntities(string connectionString) : base(connectionString, "CtEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CtEntities object.
        /// </summary>
        public CtEntities(EntityConnection connection) : base(connection, "CtEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CTSTATEDEF> CTSTATEDEF
        {
            get
            {
                if ((_CTSTATEDEF == null))
                {
                    _CTSTATEDEF = base.CreateObjectSet<CTSTATEDEF>("CTSTATEDEF");
                }
                return _CTSTATEDEF;
            }
        }
        private ObjectSet<CTSTATEDEF> _CTSTATEDEF;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CTATTRIBUTDEF> CTATTRIBUTDEF
        {
            get
            {
                if ((_CTATTRIBUTDEF == null))
                {
                    _CTATTRIBUTDEF = base.CreateObjectSet<CTATTRIBUTDEF>("CTATTRIBUTDEF");
                }
                return _CTATTRIBUTDEF;
            }
        }
        private ObjectSet<CTATTRIBUTDEF> _CTATTRIBUTDEF;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CTLANG> CTLANG
        {
            get
            {
                if ((_CTLANG == null))
                {
                    _CTLANG = base.CreateObjectSet<CTLANG>("CTLANG");
                }
                return _CTLANG;
            }
        }
        private ObjectSet<CTLANG> _CTLANG;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CTMESSAGE> CTMESSAGE
        {
            get
            {
                if ((_CTMESSAGE == null))
                {
                    _CTMESSAGE = base.CreateObjectSet<CTMESSAGE>("CTMESSAGE");
                }
                return _CTMESSAGE;
            }
        }
        private ObjectSet<CTMESSAGE> _CTMESSAGE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CTTFOID> CTTFOID
        {
            get
            {
                if ((_CTTFOID == null))
                {
                    _CTTFOID = base.CreateObjectSet<CTTFOID>("CTTFOID");
                }
                return _CTTFOID;
            }
        }
        private ObjectSet<CTTFOID> _CTTFOID;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CTTMESSAGE> CTTMESSAGE
        {
            get
            {
                if ((_CTTMESSAGE == null))
                {
                    _CTTMESSAGE = base.CreateObjectSet<CTTMESSAGE>("CTTMESSAGE");
                }
                return _CTTMESSAGE;
            }
        }
        private ObjectSet<CTTMESSAGE> _CTTMESSAGE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CTWEB> CTWEB
        {
            get
            {
                if ((_CTWEB == null))
                {
                    _CTWEB = base.CreateObjectSet<CTWEB>("CTWEB");
                }
                return _CTWEB;
            }
        }
        private ObjectSet<CTWEB> _CTWEB;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CTTSTATEDEF> CTTSTATEDEF
        {
            get
            {
                if ((_CTTSTATEDEF == null))
                {
                    _CTTSTATEDEF = base.CreateObjectSet<CTTSTATEDEF>("CTTSTATEDEF");
                }
                return _CTTSTATEDEF;
            }
        }
        private ObjectSet<CTTSTATEDEF> _CTTSTATEDEF;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CTFOID> CTFOID
        {
            get
            {
                if ((_CTFOID == null))
                {
                    _CTFOID = base.CreateObjectSet<CTFOID>("CTFOID");
                }
                return _CTFOID;
            }
        }
        private ObjectSet<CTFOID> _CTFOID;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CTCTXMESSAGE> CTCTXMESSAGE
        {
            get
            {
                if ((_CTCTXMESSAGE == null))
                {
                    _CTCTXMESSAGE = base.CreateObjectSet<CTCTXMESSAGE>("CTCTXMESSAGE");
                }
                return _CTCTXMESSAGE;
            }
        }
        private ObjectSet<CTCTXMESSAGE> _CTCTXMESSAGE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CTTWEB> CTTWEB
        {
            get
            {
                if ((_CTTWEB == null))
                {
                    _CTTWEB = base.CreateObjectSet<CTTWEB>("CTTWEB");
                }
                return _CTTWEB;
            }
        }
        private ObjectSet<CTTWEB> _CTTWEB;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CTTATTRIBUTDEF> CTTATTRIBUTDEF
        {
            get
            {
                if ((_CTTATTRIBUTDEF == null))
                {
                    _CTTATTRIBUTDEF = base.CreateObjectSet<CTTATTRIBUTDEF>("CTTATTRIBUTDEF");
                }
                return _CTTATTRIBUTDEF;
            }
        }
        private ObjectSet<CTTATTRIBUTDEF> _CTTATTRIBUTDEF;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CTSTATEDEF EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCTSTATEDEF(CTSTATEDEF cTSTATEDEF)
        {
            base.AddObject("CTSTATEDEF", cTSTATEDEF);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CTATTRIBUTDEF EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCTATTRIBUTDEF(CTATTRIBUTDEF cTATTRIBUTDEF)
        {
            base.AddObject("CTATTRIBUTDEF", cTATTRIBUTDEF);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CTLANG EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCTLANG(CTLANG cTLANG)
        {
            base.AddObject("CTLANG", cTLANG);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CTMESSAGE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCTMESSAGE(CTMESSAGE cTMESSAGE)
        {
            base.AddObject("CTMESSAGE", cTMESSAGE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CTTFOID EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCTTFOID(CTTFOID cTTFOID)
        {
            base.AddObject("CTTFOID", cTTFOID);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CTTMESSAGE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCTTMESSAGE(CTTMESSAGE cTTMESSAGE)
        {
            base.AddObject("CTTMESSAGE", cTTMESSAGE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CTWEB EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCTWEB(CTWEB cTWEB)
        {
            base.AddObject("CTWEB", cTWEB);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CTTSTATEDEF EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCTTSTATEDEF(CTTSTATEDEF cTTSTATEDEF)
        {
            base.AddObject("CTTSTATEDEF", cTTSTATEDEF);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CTFOID EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCTFOID(CTFOID cTFOID)
        {
            base.AddObject("CTFOID", cTFOID);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CTCTXMESSAGE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCTCTXMESSAGE(CTCTXMESSAGE cTCTXMESSAGE)
        {
            base.AddObject("CTCTXMESSAGE", cTCTXMESSAGE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CTTWEB EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCTTWEB(CTTWEB cTTWEB)
        {
            base.AddObject("CTTWEB", cTTWEB);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CTTATTRIBUTDEF EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCTTATTRIBUTDEF(CTTATTRIBUTDEF cTTATTRIBUTDEF)
        {
            base.AddObject("CTTATTRIBUTDEF", cTTATTRIBUTDEF);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// Attribut-Definitionen (eigentlich aus ow.dct)
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cic.OpenLease.Model.DdCt", Name="CTATTRIBUTDEF")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CTATTRIBUTDEF : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CTATTRIBUTDEF object.
        /// </summary>
        /// <param name="sYSATTRIBUTDEF">Initial value of the SYSATTRIBUTDEF property.</param>
        public static CTATTRIBUTDEF CreateCTATTRIBUTDEF(global::System.Int64 sYSATTRIBUTDEF)
        {
            CTATTRIBUTDEF cTATTRIBUTDEF = new CTATTRIBUTDEF();
            cTATTRIBUTDEF.SYSATTRIBUTDEF = sYSATTRIBUTDEF;
            return cTATTRIBUTDEF;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// System ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SYSATTRIBUTDEF
        {
            get
            {
                return _SYSATTRIBUTDEF;
            }
            set
            {
                if (_SYSATTRIBUTDEF != value)
                {
                    OnSYSATTRIBUTDEFChanging(value);
                    ReportPropertyChanging("SYSATTRIBUTDEF");
                    _SYSATTRIBUTDEF = StructuralObject.SetValidValue(value, "SYSATTRIBUTDEF");
                    ReportPropertyChanged("SYSATTRIBUTDEF");
                    OnSYSATTRIBUTDEFChanged();
                }
            }
        }
        private global::System.Int64 _SYSATTRIBUTDEF;
        partial void OnSYSATTRIBUTDEFChanging(global::System.Int64 value);
        partial void OnSYSATTRIBUTDEFChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ATTRIBUT
        {
            get
            {
                return _ATTRIBUT;
            }
            set
            {
                OnATTRIBUTChanging(value);
                ReportPropertyChanging("ATTRIBUT");
                _ATTRIBUT = StructuralObject.SetValidValue(value, true, "ATTRIBUT");
                ReportPropertyChanged("ATTRIBUT");
                OnATTRIBUTChanged();
            }
        }
        private global::System.String _ATTRIBUT;
        partial void OnATTRIBUTChanging(global::System.String value);
        partial void OnATTRIBUTChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BESCHREIBUNG
        {
            get
            {
                return _BESCHREIBUNG;
            }
            set
            {
                OnBESCHREIBUNGChanging(value);
                ReportPropertyChanging("BESCHREIBUNG");
                _BESCHREIBUNG = StructuralObject.SetValidValue(value, true, "BESCHREIBUNG");
                ReportPropertyChanged("BESCHREIBUNG");
                OnBESCHREIBUNGChanged();
            }
        }
        private global::System.String _BESCHREIBUNG;
        partial void OnBESCHREIBUNGChanging(global::System.String value);
        partial void OnBESCHREIBUNGChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cic.OpenLease.Model.DdCt", "CTTATTRIBUTDEF_CTATTRIBUTDEF", "CTTATTRIBUTDEF")]
        public EntityCollection<CTTATTRIBUTDEF> CTTATTRIBUTDEFList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CTTATTRIBUTDEF>("Cic.OpenLease.Model.DdCt.CTTATTRIBUTDEF_CTATTRIBUTDEF", "CTTATTRIBUTDEF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CTTATTRIBUTDEF>("Cic.OpenLease.Model.DdCt.CTTATTRIBUTDEF_CTATTRIBUTDEF", "CTTATTRIBUTDEF", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Message in context of use
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cic.OpenLease.Model.DdCt", Name="CTCTXMESSAGE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CTCTXMESSAGE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CTCTXMESSAGE object.
        /// </summary>
        /// <param name="sYSCTTMESSAGE">Initial value of the SYSCTTMESSAGE property.</param>
        public static CTCTXMESSAGE CreateCTCTXMESSAGE(global::System.Int64 sYSCTTMESSAGE)
        {
            CTCTXMESSAGE cTCTXMESSAGE = new CTCTXMESSAGE();
            cTCTXMESSAGE.SYSCTTMESSAGE = sYSCTTMESSAGE;
            return cTCTXMESSAGE;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SYSCTTMESSAGE
        {
            get
            {
                return _SYSCTTMESSAGE;
            }
            set
            {
                if (_SYSCTTMESSAGE != value)
                {
                    OnSYSCTTMESSAGEChanging(value);
                    ReportPropertyChanging("SYSCTTMESSAGE");
                    _SYSCTTMESSAGE = StructuralObject.SetValidValue(value, "SYSCTTMESSAGE");
                    ReportPropertyChanged("SYSCTTMESSAGE");
                    OnSYSCTTMESSAGEChanged();
                }
            }
        }
        private global::System.Int64 _SYSCTTMESSAGE;
        partial void OnSYSCTTMESSAGEChanging(global::System.Int64 value);
        partial void OnSYSCTTMESSAGEChanged();
    
        /// <summary>
        /// Unique Message Identifier
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MESSAGECODE
        {
            get
            {
                return _MESSAGECODE;
            }
            set
            {
                OnMESSAGECODEChanging(value);
                ReportPropertyChanging("MESSAGECODE");
                _MESSAGECODE = StructuralObject.SetValidValue(value, true, "MESSAGECODE");
                ReportPropertyChanged("MESSAGECODE");
                OnMESSAGECODEChanged();
            }
        }
        private global::System.String _MESSAGECODE;
        partial void OnMESSAGECODEChanging(global::System.String value);
        partial void OnMESSAGECODEChanged();
    
        /// <summary>
        /// Area of the message
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MESSAGEAREA
        {
            get
            {
                return _MESSAGEAREA;
            }
            set
            {
                OnMESSAGEAREAChanging(value);
                ReportPropertyChanging("MESSAGEAREA");
                _MESSAGEAREA = StructuralObject.SetValidValue(value, true, "MESSAGEAREA");
                ReportPropertyChanged("MESSAGEAREA");
                OnMESSAGEAREAChanged();
            }
        }
        private global::System.String _MESSAGEAREA;
        partial void OnMESSAGEAREAChanging(global::System.String value);
        partial void OnMESSAGEAREAChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SYSLOGDUMP
        {
            get
            {
                return _SYSLOGDUMP;
            }
            set
            {
                OnSYSLOGDUMPChanging(value);
                ReportPropertyChanging("SYSLOGDUMP");
                _SYSLOGDUMP = StructuralObject.SetValidValue(value, "SYSLOGDUMP");
                ReportPropertyChanged("SYSLOGDUMP");
                OnSYSLOGDUMPChanged();
            }
        }
        private Nullable<global::System.Int64> _SYSLOGDUMP;
        partial void OnSYSLOGDUMPChanging(Nullable<global::System.Int64> value);
        partial void OnSYSLOGDUMPChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SYSWFLOG
        {
            get
            {
                return _SYSWFLOG;
            }
            set
            {
                OnSYSWFLOGChanging(value);
                ReportPropertyChanging("SYSWFLOG");
                _SYSWFLOG = StructuralObject.SetValidValue(value, "SYSWFLOG");
                ReportPropertyChanged("SYSWFLOG");
                OnSYSWFLOGChanged();
            }
        }
        private Nullable<global::System.Int64> _SYSWFLOG;
        partial void OnSYSWFLOGChanging(Nullable<global::System.Int64> value);
        partial void OnSYSWFLOGChanged();

        #endregion

    }
    
    /// <summary>
    /// Frontoffice items
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cic.OpenLease.Model.DdCt", Name="CTFOID")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CTFOID : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CTFOID object.
        /// </summary>
        /// <param name="sYSCTFOID">Initial value of the SYSCTFOID property.</param>
        public static CTFOID CreateCTFOID(global::System.Int64 sYSCTFOID)
        {
            CTFOID cTFOID = new CTFOID();
            cTFOID.SYSCTFOID = sYSCTFOID;
            return cTFOID;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SYSCTFOID
        {
            get
            {
                return _SYSCTFOID;
            }
            set
            {
                if (_SYSCTFOID != value)
                {
                    OnSYSCTFOIDChanging(value);
                    ReportPropertyChanging("SYSCTFOID");
                    _SYSCTFOID = StructuralObject.SetValidValue(value, "SYSCTFOID");
                    ReportPropertyChanged("SYSCTFOID");
                    OnSYSCTFOIDChanged();
                }
            }
        }
        private global::System.Int64 _SYSCTFOID;
        partial void OnSYSCTFOIDChanging(global::System.Int64 value);
        partial void OnSYSCTFOIDChanged();
    
        /// <summary>
        /// Unique FO identifier
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FRONTID
        {
            get
            {
                return _FRONTID;
            }
            set
            {
                OnFRONTIDChanging(value);
                ReportPropertyChanging("FRONTID");
                _FRONTID = StructuralObject.SetValidValue(value, true, "FRONTID");
                ReportPropertyChanged("FRONTID");
                OnFRONTIDChanged();
            }
        }
        private global::System.String _FRONTID;
        partial void OnFRONTIDChanging(global::System.String value);
        partial void OnFRONTIDChanged();
    
        /// <summary>
        /// Standardlabel or Blob
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TYP
        {
            get
            {
                return _TYP;
            }
            set
            {
                OnTYPChanging(value);
                ReportPropertyChanging("TYP");
                _TYP = StructuralObject.SetValidValue(value, "TYP");
                ReportPropertyChanged("TYP");
                OnTYPChanged();
            }
        }
        private Nullable<global::System.Int32> _TYP;
        partial void OnTYPChanging(Nullable<global::System.Int32> value);
        partial void OnTYPChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VERBALDESCRIPTION
        {
            get
            {
                return _VERBALDESCRIPTION;
            }
            set
            {
                OnVERBALDESCRIPTIONChanging(value);
                ReportPropertyChanging("VERBALDESCRIPTION");
                _VERBALDESCRIPTION = StructuralObject.SetValidValue(value, true, "VERBALDESCRIPTION");
                ReportPropertyChanged("VERBALDESCRIPTION");
                OnVERBALDESCRIPTIONChanged();
            }
        }
        private global::System.String _VERBALDESCRIPTION;
        partial void OnVERBALDESCRIPTIONChanging(global::System.String value);
        partial void OnVERBALDESCRIPTIONChanged();

        #endregion

    }
    
    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cic.OpenLease.Model.DdCt", Name="CTLANG")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CTLANG : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CTLANG object.
        /// </summary>
        /// <param name="sYSCTLANG">Initial value of the SYSCTLANG property.</param>
        public static CTLANG CreateCTLANG(global::System.Int64 sYSCTLANG)
        {
            CTLANG cTLANG = new CTLANG();
            cTLANG.SYSCTLANG = sYSCTLANG;
            return cTLANG;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SYSCTLANG
        {
            get
            {
                return _SYSCTLANG;
            }
            set
            {
                if (_SYSCTLANG != value)
                {
                    OnSYSCTLANGChanging(value);
                    ReportPropertyChanging("SYSCTLANG");
                    _SYSCTLANG = StructuralObject.SetValidValue(value, "SYSCTLANG");
                    ReportPropertyChanged("SYSCTLANG");
                    OnSYSCTLANGChanged();
                }
            }
        }
        private global::System.Int64 _SYSCTLANG;
        partial void OnSYSCTLANGChanging(global::System.Int64 value);
        partial void OnSYSCTLANGChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LANGUAGENAME
        {
            get
            {
                return _LANGUAGENAME;
            }
            set
            {
                OnLANGUAGENAMEChanging(value);
                ReportPropertyChanging("LANGUAGENAME");
                _LANGUAGENAME = StructuralObject.SetValidValue(value, true, "LANGUAGENAME");
                ReportPropertyChanged("LANGUAGENAME");
                OnLANGUAGENAMEChanged();
            }
        }
        private global::System.String _LANGUAGENAME;
        partial void OnLANGUAGENAMEChanging(global::System.String value);
        partial void OnLANGUAGENAMEChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISOCODE
        {
            get
            {
                return _ISOCODE;
            }
            set
            {
                OnISOCODEChanging(value);
                ReportPropertyChanging("ISOCODE");
                _ISOCODE = StructuralObject.SetValidValue(value, true, "ISOCODE");
                ReportPropertyChanged("ISOCODE");
                OnISOCODEChanged();
            }
        }
        private global::System.String _ISOCODE;
        partial void OnISOCODEChanging(global::System.String value);
        partial void OnISOCODEChanged();
    
        /// <summary>
        /// Wird zum �bersetzen benutzt
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FLAGTRANSLATE
        {
            get
            {
                return _FLAGTRANSLATE;
            }
            set
            {
                OnFLAGTRANSLATEChanging(value);
                ReportPropertyChanging("FLAGTRANSLATE");
                _FLAGTRANSLATE = StructuralObject.SetValidValue(value, "FLAGTRANSLATE");
                ReportPropertyChanged("FLAGTRANSLATE");
                OnFLAGTRANSLATEChanged();
            }
        }
        private Nullable<global::System.Int32> _FLAGTRANSLATE;
        partial void OnFLAGTRANSLATEChanging(Nullable<global::System.Int32> value);
        partial void OnFLAGTRANSLATEChanged();
    
        /// <summary>
        /// Aktivflag
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ACTIVEFLAG
        {
            get
            {
                return _ACTIVEFLAG;
            }
            set
            {
                OnACTIVEFLAGChanging(value);
                ReportPropertyChanging("ACTIVEFLAG");
                _ACTIVEFLAG = StructuralObject.SetValidValue(value, "ACTIVEFLAG");
                ReportPropertyChanged("ACTIVEFLAG");
                OnACTIVEFLAGChanged();
            }
        }
        private Nullable<global::System.Int32> _ACTIVEFLAG;
        partial void OnACTIVEFLAGChanging(Nullable<global::System.Int32> value);
        partial void OnACTIVEFLAGChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cic.OpenLease.Model.DdCt", "CTTSTATEDEF_CTLANG", "CTTSTATEDEF")]
        public EntityCollection<CTTSTATEDEF> CTTSTATEDEFList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CTTSTATEDEF>("Cic.OpenLease.Model.DdCt.CTTSTATEDEF_CTLANG", "CTTSTATEDEF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CTTSTATEDEF>("Cic.OpenLease.Model.DdCt.CTTSTATEDEF_CTLANG", "CTTSTATEDEF", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cic.OpenLease.Model.DdCt", "CTTATTRIBUTDEF_CTLANG", "CTTATTRIBUTDEF")]
        public EntityCollection<CTTATTRIBUTDEF> CTTATTRIBUTDEFList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CTTATTRIBUTDEF>("Cic.OpenLease.Model.DdCt.CTTATTRIBUTDEF_CTLANG", "CTTATTRIBUTDEF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CTTATTRIBUTDEF>("Cic.OpenLease.Model.DdCt.CTTATTRIBUTDEF_CTLANG", "CTTATTRIBUTDEF", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cic.OpenLease.Model.DdCt", "CTTMESSAGE_CTLANG", "CTTMESSAGE")]
        public EntityCollection<CTTMESSAGE> CTTMESSAGEList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CTTMESSAGE>("Cic.OpenLease.Model.DdCt.CTTMESSAGE_CTLANG", "CTTMESSAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CTTMESSAGE>("Cic.OpenLease.Model.DdCt.CTTMESSAGE_CTLANG", "CTTMESSAGE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cic.OpenLease.Model.DdCt", "CTTFOID_CTLANG", "CTTFOID")]
        public EntityCollection<CTTFOID> CTTFOIDList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CTTFOID>("Cic.OpenLease.Model.DdCt.CTTFOID_CTLANG", "CTTFOID");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CTTFOID>("Cic.OpenLease.Model.DdCt.CTTFOID_CTLANG", "CTTFOID", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cic.OpenLease.Model.DdCt", "CTTWEB_CTLANG", "CTTWEB")]
        public EntityCollection<CTTWEB> CTTWEBList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CTTWEB>("Cic.OpenLease.Model.DdCt.CTTWEB_CTLANG", "CTTWEB");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CTTWEB>("Cic.OpenLease.Model.DdCt.CTTWEB_CTLANG", "CTTWEB", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Messages and errors
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cic.OpenLease.Model.DdCt", Name="CTMESSAGE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CTMESSAGE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CTMESSAGE object.
        /// </summary>
        /// <param name="sYSCTMESSAGE">Initial value of the SYSCTMESSAGE property.</param>
        public static CTMESSAGE CreateCTMESSAGE(global::System.Int64 sYSCTMESSAGE)
        {
            CTMESSAGE cTMESSAGE = new CTMESSAGE();
            cTMESSAGE.SYSCTMESSAGE = sYSCTMESSAGE;
            return cTMESSAGE;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SYSCTMESSAGE
        {
            get
            {
                return _SYSCTMESSAGE;
            }
            set
            {
                if (_SYSCTMESSAGE != value)
                {
                    OnSYSCTMESSAGEChanging(value);
                    ReportPropertyChanging("SYSCTMESSAGE");
                    _SYSCTMESSAGE = StructuralObject.SetValidValue(value, "SYSCTMESSAGE");
                    ReportPropertyChanged("SYSCTMESSAGE");
                    OnSYSCTMESSAGEChanged();
                }
            }
        }
        private global::System.Int64 _SYSCTMESSAGE;
        partial void OnSYSCTMESSAGEChanging(global::System.Int64 value);
        partial void OnSYSCTMESSAGEChanged();
    
        /// <summary>
        /// Message Identifier (unique with messageArea)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MESSAGECODE
        {
            get
            {
                return _MESSAGECODE;
            }
            set
            {
                OnMESSAGECODEChanging(value);
                ReportPropertyChanging("MESSAGECODE");
                _MESSAGECODE = StructuralObject.SetValidValue(value, true, "MESSAGECODE");
                ReportPropertyChanged("MESSAGECODE");
                OnMESSAGECODEChanged();
            }
        }
        private global::System.String _MESSAGECODE;
        partial void OnMESSAGECODEChanging(global::System.String value);
        partial void OnMESSAGECODEChanged();
    
        /// <summary>
        /// Message area (unique with messageCode)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MESSAGEAREA
        {
            get
            {
                return _MESSAGEAREA;
            }
            set
            {
                OnMESSAGEAREAChanging(value);
                ReportPropertyChanging("MESSAGEAREA");
                _MESSAGEAREA = StructuralObject.SetValidValue(value, true, "MESSAGEAREA");
                ReportPropertyChanged("MESSAGEAREA");
                OnMESSAGEAREAChanged();
            }
        }
        private global::System.String _MESSAGEAREA;
        partial void OnMESSAGEAREAChanging(global::System.String value);
        partial void OnMESSAGEAREAChanged();
    
        /// <summary>
        /// Art der Message
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MESSAGETYP
        {
            get
            {
                return _MESSAGETYP;
            }
            set
            {
                OnMESSAGETYPChanging(value);
                ReportPropertyChanging("MESSAGETYP");
                _MESSAGETYP = StructuralObject.SetValidValue(value, "MESSAGETYP");
                ReportPropertyChanged("MESSAGETYP");
                OnMESSAGETYPChanged();
            }
        }
        private Nullable<global::System.Int32> _MESSAGETYP;
        partial void OnMESSAGETYPChanging(Nullable<global::System.Int32> value);
        partial void OnMESSAGETYPChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MESSAGETEXT
        {
            get
            {
                return _MESSAGETEXT;
            }
            set
            {
                OnMESSAGETEXTChanging(value);
                ReportPropertyChanging("MESSAGETEXT");
                _MESSAGETEXT = StructuralObject.SetValidValue(value, true, "MESSAGETEXT");
                ReportPropertyChanged("MESSAGETEXT");
                OnMESSAGETEXTChanged();
            }
        }
        private global::System.String _MESSAGETEXT;
        partial void OnMESSAGETEXTChanging(global::System.String value);
        partial void OnMESSAGETEXTChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MESSAGETITLE
        {
            get
            {
                return _MESSAGETITLE;
            }
            set
            {
                OnMESSAGETITLEChanging(value);
                ReportPropertyChanging("MESSAGETITLE");
                _MESSAGETITLE = StructuralObject.SetValidValue(value, true, "MESSAGETITLE");
                ReportPropertyChanged("MESSAGETITLE");
                OnMESSAGETITLEChanged();
            }
        }
        private global::System.String _MESSAGETITLE;
        partial void OnMESSAGETITLEChanging(global::System.String value);
        partial void OnMESSAGETITLEChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VERBALDESCRIPTION
        {
            get
            {
                return _VERBALDESCRIPTION;
            }
            set
            {
                OnVERBALDESCRIPTIONChanging(value);
                ReportPropertyChanging("VERBALDESCRIPTION");
                _VERBALDESCRIPTION = StructuralObject.SetValidValue(value, true, "VERBALDESCRIPTION");
                ReportPropertyChanged("VERBALDESCRIPTION");
                OnVERBALDESCRIPTIONChanged();
            }
        }
        private global::System.String _VERBALDESCRIPTION;
        partial void OnVERBALDESCRIPTIONChanging(global::System.String value);
        partial void OnVERBALDESCRIPTIONChanged();

        #endregion

    }
    
    /// <summary>
    /// Definition f�r interne und oder externe Stati bzw. Zust�nde
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cic.OpenLease.Model.DdCt", Name="CTSTATEDEF")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CTSTATEDEF : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CTSTATEDEF object.
        /// </summary>
        /// <param name="sYSSTATEDEF">Initial value of the SYSSTATEDEF property.</param>
        public static CTSTATEDEF CreateCTSTATEDEF(global::System.Int64 sYSSTATEDEF)
        {
            CTSTATEDEF cTSTATEDEF = new CTSTATEDEF();
            cTSTATEDEF.SYSSTATEDEF = sYSSTATEDEF;
            return cTSTATEDEF;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// System ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SYSSTATEDEF
        {
            get
            {
                return _SYSSTATEDEF;
            }
            set
            {
                if (_SYSSTATEDEF != value)
                {
                    OnSYSSTATEDEFChanging(value);
                    ReportPropertyChanging("SYSSTATEDEF");
                    _SYSSTATEDEF = StructuralObject.SetValidValue(value, "SYSSTATEDEF");
                    ReportPropertyChanged("SYSSTATEDEF");
                    OnSYSSTATEDEFChanged();
                }
            }
        }
        private global::System.Int64 _SYSSTATEDEF;
        partial void OnSYSSTATEDEFChanging(global::System.Int64 value);
        partial void OnSYSSTATEDEFChanged();
    
        /// <summary>
        /// Zustand kommt in angebot, antrag und vt vor
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZUSTAND
        {
            get
            {
                return _ZUSTAND;
            }
            set
            {
                OnZUSTANDChanging(value);
                ReportPropertyChanging("ZUSTAND");
                _ZUSTAND = StructuralObject.SetValidValue(value, true, "ZUSTAND");
                ReportPropertyChanged("ZUSTAND");
                OnZUSTANDChanged();
            }
        }
        private global::System.String _ZUSTAND;
        partial void OnZUSTANDChanging(global::System.String value);
        partial void OnZUSTANDChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BESCHREIBUNG
        {
            get
            {
                return _BESCHREIBUNG;
            }
            set
            {
                OnBESCHREIBUNGChanging(value);
                ReportPropertyChanging("BESCHREIBUNG");
                _BESCHREIBUNG = StructuralObject.SetValidValue(value, true, "BESCHREIBUNG");
                ReportPropertyChanged("BESCHREIBUNG");
                OnBESCHREIBUNGChanged();
            }
        }
        private global::System.String _BESCHREIBUNG;
        partial void OnBESCHREIBUNGChanging(global::System.String value);
        partial void OnBESCHREIBUNGChanged();
    
        /// <summary>
        /// 0 = intern, 1 = extern, 2 = beides
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ART
        {
            get
            {
                return _ART;
            }
            set
            {
                OnARTChanging(value);
                ReportPropertyChanging("ART");
                _ART = StructuralObject.SetValidValue(value, "ART");
                ReportPropertyChanged("ART");
                OnARTChanged();
            }
        }
        private Nullable<global::System.Int32> _ART;
        partial void OnARTChanging(Nullable<global::System.Int32> value);
        partial void OnARTChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cic.OpenLease.Model.DdCt", "CTTSTATEDEF_CTSTATEDEF", "CTTSTATEDEF")]
        public EntityCollection<CTTSTATEDEF> CTTSTATEDEFList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CTTSTATEDEF>("Cic.OpenLease.Model.DdCt.CTTSTATEDEF_CTSTATEDEF", "CTTSTATEDEF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CTTSTATEDEF>("Cic.OpenLease.Model.DdCt.CTTSTATEDEF_CTSTATEDEF", "CTTSTATEDEF", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// �bersetzungen f�r Attribut-Definitionen
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cic.OpenLease.Model.DdCt", Name="CTTATTRIBUTDEF")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CTTATTRIBUTDEF : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CTTATTRIBUTDEF object.
        /// </summary>
        /// <param name="sYSCTTATTRIBUTDEF">Initial value of the SYSCTTATTRIBUTDEF property.</param>
        public static CTTATTRIBUTDEF CreateCTTATTRIBUTDEF(global::System.Int64 sYSCTTATTRIBUTDEF)
        {
            CTTATTRIBUTDEF cTTATTRIBUTDEF = new CTTATTRIBUTDEF();
            cTTATTRIBUTDEF.SYSCTTATTRIBUTDEF = sYSCTTATTRIBUTDEF;
            return cTTATTRIBUTDEF;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SYSCTTATTRIBUTDEF
        {
            get
            {
                return _SYSCTTATTRIBUTDEF;
            }
            set
            {
                if (_SYSCTTATTRIBUTDEF != value)
                {
                    OnSYSCTTATTRIBUTDEFChanging(value);
                    ReportPropertyChanging("SYSCTTATTRIBUTDEF");
                    _SYSCTTATTRIBUTDEF = StructuralObject.SetValidValue(value, "SYSCTTATTRIBUTDEF");
                    ReportPropertyChanged("SYSCTTATTRIBUTDEF");
                    OnSYSCTTATTRIBUTDEFChanged();
                }
            }
        }
        private global::System.Int64 _SYSCTTATTRIBUTDEF;
        partial void OnSYSCTTATTRIBUTDEFChanging(global::System.Int64 value);
        partial void OnSYSCTTATTRIBUTDEFChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REPLACEATTRIBUT
        {
            get
            {
                return _REPLACEATTRIBUT;
            }
            set
            {
                OnREPLACEATTRIBUTChanging(value);
                ReportPropertyChanging("REPLACEATTRIBUT");
                _REPLACEATTRIBUT = StructuralObject.SetValidValue(value, true, "REPLACEATTRIBUT");
                ReportPropertyChanged("REPLACEATTRIBUT");
                OnREPLACEATTRIBUTChanged();
            }
        }
        private global::System.String _REPLACEATTRIBUT;
        partial void OnREPLACEATTRIBUTChanging(global::System.String value);
        partial void OnREPLACEATTRIBUTChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REPLACEBESCHREIBUNG
        {
            get
            {
                return _REPLACEBESCHREIBUNG;
            }
            set
            {
                OnREPLACEBESCHREIBUNGChanging(value);
                ReportPropertyChanging("REPLACEBESCHREIBUNG");
                _REPLACEBESCHREIBUNG = StructuralObject.SetValidValue(value, true, "REPLACEBESCHREIBUNG");
                ReportPropertyChanged("REPLACEBESCHREIBUNG");
                OnREPLACEBESCHREIBUNGChanged();
            }
        }
        private global::System.String _REPLACEBESCHREIBUNG;
        partial void OnREPLACEBESCHREIBUNGChanging(global::System.String value);
        partial void OnREPLACEBESCHREIBUNGChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cic.OpenLease.Model.DdCt", "CTTATTRIBUTDEF_CTLANG", "CTLANG")]
        public CTLANG CTLANG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTATTRIBUTDEF_CTLANG", "CTLANG").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTATTRIBUTDEF_CTLANG", "CTLANG").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CTLANG> CTLANGReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTATTRIBUTDEF_CTLANG", "CTLANG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTATTRIBUTDEF_CTLANG", "CTLANG", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cic.OpenLease.Model.DdCt", "CTTATTRIBUTDEF_CTATTRIBUTDEF", "CTATTRIBUTDEF")]
        public CTATTRIBUTDEF CTATTRIBUTDEF
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTATTRIBUTDEF>("Cic.OpenLease.Model.DdCt.CTTATTRIBUTDEF_CTATTRIBUTDEF", "CTATTRIBUTDEF").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTATTRIBUTDEF>("Cic.OpenLease.Model.DdCt.CTTATTRIBUTDEF_CTATTRIBUTDEF", "CTATTRIBUTDEF").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CTATTRIBUTDEF> CTATTRIBUTDEFReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTATTRIBUTDEF>("Cic.OpenLease.Model.DdCt.CTTATTRIBUTDEF_CTATTRIBUTDEF", "CTATTRIBUTDEF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CTATTRIBUTDEF>("Cic.OpenLease.Model.DdCt.CTTATTRIBUTDEF_CTATTRIBUTDEF", "CTATTRIBUTDEF", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Frontoffice items
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cic.OpenLease.Model.DdCt", Name="CTTFOID")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CTTFOID : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CTTFOID object.
        /// </summary>
        /// <param name="sYSCTTFOID">Initial value of the SYSCTTFOID property.</param>
        public static CTTFOID CreateCTTFOID(global::System.Int64 sYSCTTFOID)
        {
            CTTFOID cTTFOID = new CTTFOID();
            cTTFOID.SYSCTTFOID = sYSCTTFOID;
            return cTTFOID;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// For huge text or even binary contents
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] REPLACEBLOB
        {
            get
            {
                return StructuralObject.GetValidValue(_REPLACEBLOB);
            }
            set
            {
                OnREPLACEBLOBChanging(value);
                ReportPropertyChanging("REPLACEBLOB");
                _REPLACEBLOB = StructuralObject.SetValidValue(value, true, "REPLACEBLOB");
                ReportPropertyChanged("REPLACEBLOB");
                OnREPLACEBLOBChanged();
            }
        }
        private global::System.Byte[] _REPLACEBLOB;
        partial void OnREPLACEBLOBChanging(global::System.Byte[] value);
        partial void OnREPLACEBLOBChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SYSCTTFOID
        {
            get
            {
                return _SYSCTTFOID;
            }
            set
            {
                if (_SYSCTTFOID != value)
                {
                    OnSYSCTTFOIDChanging(value);
                    ReportPropertyChanging("SYSCTTFOID");
                    _SYSCTTFOID = StructuralObject.SetValidValue(value, "SYSCTTFOID");
                    ReportPropertyChanged("SYSCTTFOID");
                    OnSYSCTTFOIDChanged();
                }
            }
        }
        private global::System.Int64 _SYSCTTFOID;
        partial void OnSYSCTTFOIDChanging(global::System.Int64 value);
        partial void OnSYSCTTFOIDChanged();
    
        /// <summary>
        /// Unique FO identifier
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FRONTID
        {
            get
            {
                return _FRONTID;
            }
            set
            {
                OnFRONTIDChanging(value);
                ReportPropertyChanging("FRONTID");
                _FRONTID = StructuralObject.SetValidValue(value, true, "FRONTID");
                ReportPropertyChanged("FRONTID");
                OnFRONTIDChanged();
            }
        }
        private global::System.String _FRONTID;
        partial void OnFRONTIDChanging(global::System.String value);
        partial void OnFRONTIDChanged();
    
        /// <summary>
        /// Standard text up to 4000 characters
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REPLACETERM
        {
            get
            {
                return _REPLACETERM;
            }
            set
            {
                OnREPLACETERMChanging(value);
                ReportPropertyChanging("REPLACETERM");
                _REPLACETERM = StructuralObject.SetValidValue(value, true, "REPLACETERM");
                ReportPropertyChanged("REPLACETERM");
                OnREPLACETERMChanged();
            }
        }
        private global::System.String _REPLACETERM;
        partial void OnREPLACETERMChanging(global::System.String value);
        partial void OnREPLACETERMChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cic.OpenLease.Model.DdCt", "CTTFOID_CTLANG", "CTLANG")]
        public CTLANG CTLANG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTFOID_CTLANG", "CTLANG").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTFOID_CTLANG", "CTLANG").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CTLANG> CTLANGReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTFOID_CTLANG", "CTLANG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTFOID_CTLANG", "CTLANG", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Translated messages and errors
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cic.OpenLease.Model.DdCt", Name="CTTMESSAGE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CTTMESSAGE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CTTMESSAGE object.
        /// </summary>
        /// <param name="sYSCTTMESSAGE">Initial value of the SYSCTTMESSAGE property.</param>
        public static CTTMESSAGE CreateCTTMESSAGE(global::System.Int64 sYSCTTMESSAGE)
        {
            CTTMESSAGE cTTMESSAGE = new CTTMESSAGE();
            cTTMESSAGE.SYSCTTMESSAGE = sYSCTTMESSAGE;
            return cTTMESSAGE;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SYSCTTMESSAGE
        {
            get
            {
                return _SYSCTTMESSAGE;
            }
            set
            {
                if (_SYSCTTMESSAGE != value)
                {
                    OnSYSCTTMESSAGEChanging(value);
                    ReportPropertyChanging("SYSCTTMESSAGE");
                    _SYSCTTMESSAGE = StructuralObject.SetValidValue(value, "SYSCTTMESSAGE");
                    ReportPropertyChanged("SYSCTTMESSAGE");
                    OnSYSCTTMESSAGEChanged();
                }
            }
        }
        private global::System.Int64 _SYSCTTMESSAGE;
        partial void OnSYSCTTMESSAGEChanging(global::System.Int64 value);
        partial void OnSYSCTTMESSAGEChanged();
    
        /// <summary>
        /// Unique Message Identifier together with MessageArea and SysCTLANG
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MESSAGECODE
        {
            get
            {
                return _MESSAGECODE;
            }
            set
            {
                OnMESSAGECODEChanging(value);
                ReportPropertyChanging("MESSAGECODE");
                _MESSAGECODE = StructuralObject.SetValidValue(value, true, "MESSAGECODE");
                ReportPropertyChanged("MESSAGECODE");
                OnMESSAGECODEChanged();
            }
        }
        private global::System.String _MESSAGECODE;
        partial void OnMESSAGECODEChanging(global::System.String value);
        partial void OnMESSAGECODEChanged();
    
        /// <summary>
        /// Area of the message
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MESSAGEAREA
        {
            get
            {
                return _MESSAGEAREA;
            }
            set
            {
                OnMESSAGEAREAChanging(value);
                ReportPropertyChanging("MESSAGEAREA");
                _MESSAGEAREA = StructuralObject.SetValidValue(value, true, "MESSAGEAREA");
                ReportPropertyChanged("MESSAGEAREA");
                OnMESSAGEAREAChanged();
            }
        }
        private global::System.String _MESSAGEAREA;
        partial void OnMESSAGEAREAChanging(global::System.String value);
        partial void OnMESSAGEAREAChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REPLACEMESSAGETEXT
        {
            get
            {
                return _REPLACEMESSAGETEXT;
            }
            set
            {
                OnREPLACEMESSAGETEXTChanging(value);
                ReportPropertyChanging("REPLACEMESSAGETEXT");
                _REPLACEMESSAGETEXT = StructuralObject.SetValidValue(value, true, "REPLACEMESSAGETEXT");
                ReportPropertyChanged("REPLACEMESSAGETEXT");
                OnREPLACEMESSAGETEXTChanged();
            }
        }
        private global::System.String _REPLACEMESSAGETEXT;
        partial void OnREPLACEMESSAGETEXTChanging(global::System.String value);
        partial void OnREPLACEMESSAGETEXTChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REPLACEMESSAGETITLE
        {
            get
            {
                return _REPLACEMESSAGETITLE;
            }
            set
            {
                OnREPLACEMESSAGETITLEChanging(value);
                ReportPropertyChanging("REPLACEMESSAGETITLE");
                _REPLACEMESSAGETITLE = StructuralObject.SetValidValue(value, true, "REPLACEMESSAGETITLE");
                ReportPropertyChanged("REPLACEMESSAGETITLE");
                OnREPLACEMESSAGETITLEChanged();
            }
        }
        private global::System.String _REPLACEMESSAGETITLE;
        partial void OnREPLACEMESSAGETITLEChanging(global::System.String value);
        partial void OnREPLACEMESSAGETITLEChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cic.OpenLease.Model.DdCt", "CTTMESSAGE_CTLANG", "CTLANG")]
        public CTLANG CTLANG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTMESSAGE_CTLANG", "CTLANG").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTMESSAGE_CTLANG", "CTLANG").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CTLANG> CTLANGReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTMESSAGE_CTLANG", "CTLANG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTMESSAGE_CTLANG", "CTLANG", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// �bersetzungen f�r Status bzw. Zustand-Definitionen
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cic.OpenLease.Model.DdCt", Name="CTTSTATEDEF")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CTTSTATEDEF : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CTTSTATEDEF object.
        /// </summary>
        /// <param name="sYSCTTSTATEDEF">Initial value of the SYSCTTSTATEDEF property.</param>
        public static CTTSTATEDEF CreateCTTSTATEDEF(global::System.Int64 sYSCTTSTATEDEF)
        {
            CTTSTATEDEF cTTSTATEDEF = new CTTSTATEDEF();
            cTTSTATEDEF.SYSCTTSTATEDEF = sYSCTTSTATEDEF;
            return cTTSTATEDEF;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SYSCTTSTATEDEF
        {
            get
            {
                return _SYSCTTSTATEDEF;
            }
            set
            {
                if (_SYSCTTSTATEDEF != value)
                {
                    OnSYSCTTSTATEDEFChanging(value);
                    ReportPropertyChanging("SYSCTTSTATEDEF");
                    _SYSCTTSTATEDEF = StructuralObject.SetValidValue(value, "SYSCTTSTATEDEF");
                    ReportPropertyChanged("SYSCTTSTATEDEF");
                    OnSYSCTTSTATEDEFChanged();
                }
            }
        }
        private global::System.Int64 _SYSCTTSTATEDEF;
        partial void OnSYSCTTSTATEDEFChanging(global::System.Int64 value);
        partial void OnSYSCTTSTATEDEFChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REPLACEZUSTAND
        {
            get
            {
                return _REPLACEZUSTAND;
            }
            set
            {
                OnREPLACEZUSTANDChanging(value);
                ReportPropertyChanging("REPLACEZUSTAND");
                _REPLACEZUSTAND = StructuralObject.SetValidValue(value, true, "REPLACEZUSTAND");
                ReportPropertyChanged("REPLACEZUSTAND");
                OnREPLACEZUSTANDChanged();
            }
        }
        private global::System.String _REPLACEZUSTAND;
        partial void OnREPLACEZUSTANDChanging(global::System.String value);
        partial void OnREPLACEZUSTANDChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REPLACEBESCHREIBUNG
        {
            get
            {
                return _REPLACEBESCHREIBUNG;
            }
            set
            {
                OnREPLACEBESCHREIBUNGChanging(value);
                ReportPropertyChanging("REPLACEBESCHREIBUNG");
                _REPLACEBESCHREIBUNG = StructuralObject.SetValidValue(value, true, "REPLACEBESCHREIBUNG");
                ReportPropertyChanged("REPLACEBESCHREIBUNG");
                OnREPLACEBESCHREIBUNGChanged();
            }
        }
        private global::System.String _REPLACEBESCHREIBUNG;
        partial void OnREPLACEBESCHREIBUNGChanging(global::System.String value);
        partial void OnREPLACEBESCHREIBUNGChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cic.OpenLease.Model.DdCt", "CTTSTATEDEF_CTLANG", "CTLANG")]
        public CTLANG CTLANG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTSTATEDEF_CTLANG", "CTLANG").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTSTATEDEF_CTLANG", "CTLANG").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CTLANG> CTLANGReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTSTATEDEF_CTLANG", "CTLANG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTSTATEDEF_CTLANG", "CTLANG", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cic.OpenLease.Model.DdCt", "CTTSTATEDEF_CTSTATEDEF", "CTSTATEDEF")]
        public CTSTATEDEF CTSTATEDEF
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTSTATEDEF>("Cic.OpenLease.Model.DdCt.CTTSTATEDEF_CTSTATEDEF", "CTSTATEDEF").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTSTATEDEF>("Cic.OpenLease.Model.DdCt.CTTSTATEDEF_CTSTATEDEF", "CTSTATEDEF").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CTSTATEDEF> CTSTATEDEFReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTSTATEDEF>("Cic.OpenLease.Model.DdCt.CTTSTATEDEF_CTSTATEDEF", "CTSTATEDEF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CTSTATEDEF>("Cic.OpenLease.Model.DdCt.CTTSTATEDEF_CTSTATEDEF", "CTSTATEDEF", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cic.OpenLease.Model.DdCt", Name="CTTWEB")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CTTWEB : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CTTWEB object.
        /// </summary>
        /// <param name="sYSCTTWEB">Initial value of the SYSCTTWEB property.</param>
        public static CTTWEB CreateCTTWEB(global::System.Int64 sYSCTTWEB)
        {
            CTTWEB cTTWEB = new CTTWEB();
            cTTWEB.SYSCTTWEB = sYSCTTWEB;
            return cTTWEB;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SYSCTTWEB
        {
            get
            {
                return _SYSCTTWEB;
            }
            set
            {
                if (_SYSCTTWEB != value)
                {
                    OnSYSCTTWEBChanging(value);
                    ReportPropertyChanging("SYSCTTWEB");
                    _SYSCTTWEB = StructuralObject.SetValidValue(value, "SYSCTTWEB");
                    ReportPropertyChanged("SYSCTTWEB");
                    OnSYSCTTWEBChanged();
                }
            }
        }
        private global::System.Int64 _SYSCTTWEB;
        partial void OnSYSCTTWEBChanging(global::System.Int64 value);
        partial void OnSYSCTTWEBChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REPLACETERM
        {
            get
            {
                return _REPLACETERM;
            }
            set
            {
                OnREPLACETERMChanging(value);
                ReportPropertyChanging("REPLACETERM");
                _REPLACETERM = StructuralObject.SetValidValue(value, true, "REPLACETERM");
                ReportPropertyChanged("REPLACETERM");
                OnREPLACETERMChanged();
            }
        }
        private global::System.String _REPLACETERM;
        partial void OnREPLACETERMChanging(global::System.String value);
        partial void OnREPLACETERMChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REPLACETOOLTIP
        {
            get
            {
                return _REPLACETOOLTIP;
            }
            set
            {
                OnREPLACETOOLTIPChanging(value);
                ReportPropertyChanging("REPLACETOOLTIP");
                _REPLACETOOLTIP = StructuralObject.SetValidValue(value, true, "REPLACETOOLTIP");
                ReportPropertyChanged("REPLACETOOLTIP");
                OnREPLACETOOLTIPChanged();
            }
        }
        private global::System.String _REPLACETOOLTIP;
        partial void OnREPLACETOOLTIPChanging(global::System.String value);
        partial void OnREPLACETOOLTIPChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cic.OpenLease.Model.DdCt", "CTTWEB_CTWEB", "CTWEB")]
        public CTWEB CTWEB
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTWEB>("Cic.OpenLease.Model.DdCt.CTTWEB_CTWEB", "CTWEB").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTWEB>("Cic.OpenLease.Model.DdCt.CTTWEB_CTWEB", "CTWEB").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CTWEB> CTWEBReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTWEB>("Cic.OpenLease.Model.DdCt.CTTWEB_CTWEB", "CTWEB");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CTWEB>("Cic.OpenLease.Model.DdCt.CTTWEB_CTWEB", "CTWEB", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cic.OpenLease.Model.DdCt", "CTTWEB_CTLANG", "CTLANG")]
        public CTLANG CTLANG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTWEB_CTLANG", "CTLANG").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTWEB_CTLANG", "CTLANG").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CTLANG> CTLANGReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTWEB_CTLANG", "CTLANG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CTLANG>("Cic.OpenLease.Model.DdCt.CTTWEB_CTLANG", "CTLANG", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Cic.OpenLease.Model.DdCt", Name="CTWEB")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CTWEB : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CTWEB object.
        /// </summary>
        /// <param name="sYSCTWEB">Initial value of the SYSCTWEB property.</param>
        public static CTWEB CreateCTWEB(global::System.Int64 sYSCTWEB)
        {
            CTWEB cTWEB = new CTWEB();
            cTWEB.SYSCTWEB = sYSCTWEB;
            return cTWEB;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SYSCTWEB
        {
            get
            {
                return _SYSCTWEB;
            }
            set
            {
                if (_SYSCTWEB != value)
                {
                    OnSYSCTWEBChanging(value);
                    ReportPropertyChanging("SYSCTWEB");
                    _SYSCTWEB = StructuralObject.SetValidValue(value, "SYSCTWEB");
                    ReportPropertyChanged("SYSCTWEB");
                    OnSYSCTWEBChanged();
                }
            }
        }
        private global::System.Int64 _SYSCTWEB;
        partial void OnSYSCTWEBChanging(global::System.Int64 value);
        partial void OnSYSCTWEBChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ORIGTERM
        {
            get
            {
                return _ORIGTERM;
            }
            set
            {
                OnORIGTERMChanging(value);
                ReportPropertyChanging("ORIGTERM");
                _ORIGTERM = StructuralObject.SetValidValue(value, true, "ORIGTERM");
                ReportPropertyChanged("ORIGTERM");
                OnORIGTERMChanged();
            }
        }
        private global::System.String _ORIGTERM;
        partial void OnORIGTERMChanging(global::System.String value);
        partial void OnORIGTERMChanged();
    
        /// <summary>
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CTRLTYPE
        {
            get
            {
                return _CTRLTYPE;
            }
            set
            {
                OnCTRLTYPEChanging(value);
                ReportPropertyChanging("CTRLTYPE");
                _CTRLTYPE = StructuralObject.SetValidValue(value, "CTRLTYPE");
                ReportPropertyChanged("CTRLTYPE");
                OnCTRLTYPEChanged();
            }
        }
        private Nullable<global::System.Int32> _CTRLTYPE;
        partial void OnCTRLTYPEChanging(Nullable<global::System.Int32> value);
        partial void OnCTRLTYPEChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Cic.OpenLease.Model.DdCt", "CTTWEB_CTWEB", "CTTWEB")]
        public EntityCollection<CTTWEB> CTTWEBList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CTTWEB>("Cic.OpenLease.Model.DdCt.CTTWEB_CTWEB", "CTTWEB");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CTTWEB>("Cic.OpenLease.Model.DdCt.CTTWEB_CTWEB", "CTTWEB", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
