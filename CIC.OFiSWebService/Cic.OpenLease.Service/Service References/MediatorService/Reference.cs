//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cic.OpenLease.Service.MediatorService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestBase", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Extensibility")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.DispatchAndExecuteEventRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.DispatchAndExecuteListenerRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.GetInstanceTimestampRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.GetListenersRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.GetProcessContextRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.PermissionCheckRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.SearchListenersRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.SetProcessContextRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.EvaluateRequest))]
    public partial class RequestBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DispatchAndExecuteEventRequest", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class DispatchAndExecuteEventRequest : Cic.OpenLease.Service.MediatorService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AreaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.SubscriptionsDataDto ProcessContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessDefinitionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AreaId {
            get {
                return this.AreaIdField;
            }
            set {
                if ((this.AreaIdField.Equals(value) != true)) {
                    this.AreaIdField = value;
                    this.RaisePropertyChanged("AreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventCode {
            get {
                return this.EventCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EventCodeField, value) != true)) {
                    this.EventCodeField = value;
                    this.RaisePropertyChanged("EventCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.SubscriptionsDataDto ProcessContext {
            get {
                return this.ProcessContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessContextField, value) != true)) {
                    this.ProcessContextField = value;
                    this.RaisePropertyChanged("ProcessContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessDefinitionCode {
            get {
                return this.ProcessDefinitionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessDefinitionCodeField, value) != true)) {
                    this.ProcessDefinitionCodeField = value;
                    this.RaisePropertyChanged("ProcessDefinitionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DispatchAndExecuteListenerRequest", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class DispatchAndExecuteListenerRequest : Cic.OpenLease.Service.MediatorService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InstanceTimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ListenerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverwriteProcessContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.SubscriptionsDataDto ProcessContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InstanceTimestamp {
            get {
                return this.InstanceTimestampField;
            }
            set {
                if ((this.InstanceTimestampField.Equals(value) != true)) {
                    this.InstanceTimestampField = value;
                    this.RaisePropertyChanged("InstanceTimestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ListenerId {
            get {
                return this.ListenerIdField;
            }
            set {
                if ((this.ListenerIdField.Equals(value) != true)) {
                    this.ListenerIdField = value;
                    this.RaisePropertyChanged("ListenerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverwriteProcessContext {
            get {
                return this.OverwriteProcessContextField;
            }
            set {
                if ((this.OverwriteProcessContextField.Equals(value) != true)) {
                    this.OverwriteProcessContextField = value;
                    this.RaisePropertyChanged("OverwriteProcessContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.SubscriptionsDataDto ProcessContext {
            get {
                return this.ProcessContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessContextField, value) != true)) {
                    this.ProcessContextField = value;
                    this.RaisePropertyChanged("ProcessContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetInstanceTimestampRequest", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class GetInstanceTimestampRequest : Cic.OpenLease.Service.MediatorService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessInstanceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessInstanceId {
            get {
                return this.ProcessInstanceIdField;
            }
            set {
                if ((this.ProcessInstanceIdField.Equals(value) != true)) {
                    this.ProcessInstanceIdField = value;
                    this.RaisePropertyChanged("ProcessInstanceId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetListenersRequest", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class GetListenersRequest : Cic.OpenLease.Service.MediatorService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AreaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessDefinitionCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AreaId {
            get {
                return this.AreaIdField;
            }
            set {
                if ((this.AreaIdField.Equals(value) != true)) {
                    this.AreaIdField = value;
                    this.RaisePropertyChanged("AreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessDefinitionCode {
            get {
                return this.ProcessDefinitionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessDefinitionCodeField, value) != true)) {
                    this.ProcessDefinitionCodeField = value;
                    this.RaisePropertyChanged("ProcessDefinitionCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetProcessContextRequest", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class GetProcessContextRequest : Cic.OpenLease.Service.MediatorService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ListenerIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ListenerId {
            get {
                return this.ListenerIdField;
            }
            set {
                if ((this.ListenerIdField.Equals(value) != true)) {
                    this.ListenerIdField = value;
                    this.RaisePropertyChanged("ListenerId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PermissionCheckRequest", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class PermissionCheckRequest : Cic.OpenLease.Service.MediatorService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LaneNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LaneName {
            get {
                return this.LaneNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LaneNameField, value) != true)) {
                    this.LaneNameField = value;
                    this.RaisePropertyChanged("LaneName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchListenersRequest", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class SearchListenersRequest : Cic.OpenLease.Service.MediatorService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.SearchListenersFilter FilterField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.SearchListenersFilter Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetProcessContextRequest", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class SetProcessContextRequest : Cic.OpenLease.Service.MediatorService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.SubscriptionsDataDto ProcessContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessInstanceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.SubscriptionsDataDto ProcessContext {
            get {
                return this.ProcessContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessContextField, value) != true)) {
                    this.ProcessContextField = value;
                    this.RaisePropertyChanged("ProcessContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessInstanceId {
            get {
                return this.ProcessInstanceIdField;
            }
            set {
                if ((this.ProcessInstanceIdField.Equals(value) != true)) {
                    this.ProcessInstanceIdField = value;
                    this.RaisePropertyChanged("ProcessInstanceId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EvaluateRequest", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.CASClient")]
    [System.SerializableAttribute()]
    public partial class EvaluateRequest : Cic.OpenLease.Service.MediatorService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AreaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.EvaluateRequestExpression[] ExpressionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AreaId {
            get {
                return this.AreaIdField;
            }
            set {
                if ((this.AreaIdField.Equals(value) != true)) {
                    this.AreaIdField = value;
                    this.RaisePropertyChanged("AreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.EvaluateRequestExpression[] Expressions {
            get {
                return this.ExpressionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpressionsField, value) != true)) {
                    this.ExpressionsField = value;
                    this.RaisePropertyChanged("Expressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriptionsDataDto", Namespace="http://schemas.datacontract.org/2004/07/CIC.Clarion.Evaluate.OpenLease.BindProced" +
        "ures.BusinessProcessing.Subscriptions.Dto")]
    [System.SerializableAttribute()]
    public partial class SubscriptionsDataDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.QueueDto[] QueuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.SubscriptionDto[] SubscriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.LookupVariableDto[] VariablesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.QueueDto[] Queues {
            get {
                return this.QueuesField;
            }
            set {
                if ((object.ReferenceEquals(this.QueuesField, value) != true)) {
                    this.QueuesField = value;
                    this.RaisePropertyChanged("Queues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.SubscriptionDto[] Subscriptions {
            get {
                return this.SubscriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriptionsField, value) != true)) {
                    this.SubscriptionsField = value;
                    this.RaisePropertyChanged("Subscriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.LookupVariableDto[] Variables {
            get {
                return this.VariablesField;
            }
            set {
                if ((object.ReferenceEquals(this.VariablesField, value) != true)) {
                    this.VariablesField = value;
                    this.RaisePropertyChanged("Variables");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueDto", Namespace="http://schemas.datacontract.org/2004/07/CIC.Clarion.Evaluate.OpenLease.BindProced" +
        "ures.BusinessProcessing.Subscriptions.Dto")]
    [System.SerializableAttribute()]
    public partial class QueueDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.QueueRecordDto[] RecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.QueueRecordDto[] Records {
            get {
                return this.RecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordsField, value) != true)) {
                    this.RecordsField = value;
                    this.RaisePropertyChanged("Records");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriptionDto", Namespace="http://schemas.datacontract.org/2004/07/CIC.Clarion.Evaluate.OpenLease.BindProced" +
        "ures.BusinessProcessing.Subscriptions.Dto")]
    [System.SerializableAttribute()]
    public partial class SubscriptionDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectKey {
            get {
                return this.ObjectKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectKeyField, value) != true)) {
                    this.ObjectKeyField = value;
                    this.RaisePropertyChanged("ObjectKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectName {
            get {
                return this.ObjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectNameField, value) != true)) {
                    this.ObjectNameField = value;
                    this.RaisePropertyChanged("ObjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectType {
            get {
                return this.ObjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectTypeField, value) != true)) {
                    this.ObjectTypeField = value;
                    this.RaisePropertyChanged("ObjectType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LookupVariableDto", Namespace="http://schemas.datacontract.org/2004/07/CIC.Clarion.Evaluate.OpenLease.BindProced" +
        "ures.BusinessProcessing.Subscriptions.Dto")]
    [System.SerializableAttribute()]
    public partial class LookupVariableDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LookupVariableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VariableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LookupVariableName {
            get {
                return this.LookupVariableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LookupVariableNameField, value) != true)) {
                    this.LookupVariableNameField = value;
                    this.RaisePropertyChanged("LookupVariableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VariableName {
            get {
                return this.VariableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VariableNameField, value) != true)) {
                    this.VariableNameField = value;
                    this.RaisePropertyChanged("VariableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueRecordDto", Namespace="http://schemas.datacontract.org/2004/07/CIC.Clarion.Evaluate.OpenLease.BindProced" +
        "ures.BusinessProcessing.Subscriptions.Dto")]
    [System.SerializableAttribute()]
    public partial class QueueRecordDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.QueueRecordValueDto[] ValuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.QueueRecordValueDto[] Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueRecordValueDto", Namespace="http://schemas.datacontract.org/2004/07/CIC.Clarion.Evaluate.OpenLease.BindProced" +
        "ures.BusinessProcessing.Subscriptions.Dto")]
    [System.SerializableAttribute()]
    public partial class QueueRecordValueDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VariableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VariableName {
            get {
                return this.VariableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VariableNameField, value) != true)) {
                    this.VariableNameField = value;
                    this.RaisePropertyChanged("VariableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchListenersFilter", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class SearchListenersFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AreaIdFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AreaIdToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedAtFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedAtToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IsUserTaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LaneNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Cic.OpenLease.Service.MediatorService.ListenerState> ListenerStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.SearchListenersColumn OrderByColumnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProcessInstanceIdFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProcessInstanceIdToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.SortOrder SortOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AreaIdFrom {
            get {
                return this.AreaIdFromField;
            }
            set {
                if ((this.AreaIdFromField.Equals(value) != true)) {
                    this.AreaIdFromField = value;
                    this.RaisePropertyChanged("AreaIdFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AreaIdTo {
            get {
                return this.AreaIdToField;
            }
            set {
                if ((this.AreaIdToField.Equals(value) != true)) {
                    this.AreaIdToField = value;
                    this.RaisePropertyChanged("AreaIdTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedAtFrom {
            get {
                return this.CreatedAtFromField;
            }
            set {
                if ((this.CreatedAtFromField.Equals(value) != true)) {
                    this.CreatedAtFromField = value;
                    this.RaisePropertyChanged("CreatedAtFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedAtTo {
            get {
                return this.CreatedAtToField;
            }
            set {
                if ((this.CreatedAtToField.Equals(value) != true)) {
                    this.CreatedAtToField = value;
                    this.RaisePropertyChanged("CreatedAtTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedByUserId {
            get {
                return this.CreatedByUserIdField;
            }
            set {
                if ((this.CreatedByUserIdField.Equals(value) != true)) {
                    this.CreatedByUserIdField = value;
                    this.RaisePropertyChanged("CreatedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> IsUserTask {
            get {
                return this.IsUserTaskField;
            }
            set {
                if ((this.IsUserTaskField.Equals(value) != true)) {
                    this.IsUserTaskField = value;
                    this.RaisePropertyChanged("IsUserTask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LaneName {
            get {
                return this.LaneNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LaneNameField, value) != true)) {
                    this.LaneNameField = value;
                    this.RaisePropertyChanged("LaneName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Cic.OpenLease.Service.MediatorService.ListenerState> ListenerState {
            get {
                return this.ListenerStateField;
            }
            set {
                if ((this.ListenerStateField.Equals(value) != true)) {
                    this.ListenerStateField = value;
                    this.RaisePropertyChanged("ListenerState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.SearchListenersColumn OrderByColumn {
            get {
                return this.OrderByColumnField;
            }
            set {
                if ((this.OrderByColumnField.Equals(value) != true)) {
                    this.OrderByColumnField = value;
                    this.RaisePropertyChanged("OrderByColumn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProcessInstanceIdFrom {
            get {
                return this.ProcessInstanceIdFromField;
            }
            set {
                if ((this.ProcessInstanceIdFromField.Equals(value) != true)) {
                    this.ProcessInstanceIdFromField = value;
                    this.RaisePropertyChanged("ProcessInstanceIdFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProcessInstanceIdTo {
            get {
                return this.ProcessInstanceIdToField;
            }
            set {
                if ((this.ProcessInstanceIdToField.Equals(value) != true)) {
                    this.ProcessInstanceIdToField = value;
                    this.RaisePropertyChanged("ProcessInstanceIdTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.SortOrder SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListenerState", Namespace="http://schemas.datacontract.org/2004/07/CIC.OpenBPE.Storage")]
    public enum ListenerState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingForBeProcessed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyForDispatch = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dispatching = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToExecute = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Executing = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Skipped = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Executed = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 999,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchListenersColumn", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    public enum SearchListenersColumn : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Id = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventCode = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AreaName = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AreaId = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessId = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ListenerDefinitionId = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessDefinitionId = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessInstanceId = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsUserTask = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FlowNodeId = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Priority = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ListenerState = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExecutionHost = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserId = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TokenId = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaneName = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedAt = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessInstanceChildId = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EvaluateCode = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventDefinitionCode = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePersistence = 20,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortOrder", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Core")]
    public enum SortOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ascending = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Descending = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EvaluateRequestExpression", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.CASClient")]
    [System.SerializableAttribute()]
    public partial class EvaluateRequestExpression : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseBase", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Extensibility")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.DispatchAndExecuteEventResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.DispatchAndExecuteListenerResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.GetInstanceTimestampResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.GetListenersResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.GetProcessContextResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.PermissionCheckResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.SearchListenersResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.ErrorResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.EvaluateResponse))]
    public partial class ResponseBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DispatchAndExecuteEventResponse", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class DispatchAndExecuteEventResponse : Cic.OpenLease.Service.MediatorService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.ExecutionReport ExecutionReportField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.ExecutionReport ExecutionReport {
            get {
                return this.ExecutionReportField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutionReportField, value) != true)) {
                    this.ExecutionReportField = value;
                    this.RaisePropertyChanged("ExecutionReport");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DispatchAndExecuteListenerResponse", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class DispatchAndExecuteListenerResponse : Cic.OpenLease.Service.MediatorService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.ExecutionReport ExecutionReportField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.ExecutionReport ExecutionReport {
            get {
                return this.ExecutionReportField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutionReportField, value) != true)) {
                    this.ExecutionReportField = value;
                    this.RaisePropertyChanged("ExecutionReport");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetInstanceTimestampResponse", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class GetInstanceTimestampResponse : Cic.OpenLease.Service.MediatorService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InstanceTimestampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InstanceTimestamp {
            get {
                return this.InstanceTimestampField;
            }
            set {
                if ((this.InstanceTimestampField.Equals(value) != true)) {
                    this.InstanceTimestampField = value;
                    this.RaisePropertyChanged("InstanceTimestamp");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetListenersResponse", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class GetListenersResponse : Cic.OpenLease.Service.MediatorService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.ListenerModel[] ListenersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.ListenerModel[] Listeners {
            get {
                return this.ListenersField;
            }
            set {
                if ((object.ReferenceEquals(this.ListenersField, value) != true)) {
                    this.ListenersField = value;
                    this.RaisePropertyChanged("Listeners");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetProcessContextResponse", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class GetProcessContextResponse : Cic.OpenLease.Service.MediatorService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.SubscriptionsDataDto ProcessContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessInstanceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.SubscriptionsDataDto ProcessContext {
            get {
                return this.ProcessContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessContextField, value) != true)) {
                    this.ProcessContextField = value;
                    this.RaisePropertyChanged("ProcessContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessInstanceId {
            get {
                return this.ProcessInstanceIdField;
            }
            set {
                if ((this.ProcessInstanceIdField.Equals(value) != true)) {
                    this.ProcessInstanceIdField = value;
                    this.RaisePropertyChanged("ProcessInstanceId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PermissionCheckResponse", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class PermissionCheckResponse : Cic.OpenLease.Service.MediatorService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPermissionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPermission {
            get {
                return this.HasPermissionField;
            }
            set {
                if ((this.HasPermissionField.Equals(value) != true)) {
                    this.HasPermissionField = value;
                    this.RaisePropertyChanged("HasPermission");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchListenersResponse", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class SearchListenersResponse : Cic.OpenLease.Service.MediatorService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.ListenerModel[] ListenersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.ListenerModel[] Listeners {
            get {
                return this.ListenersField;
            }
            set {
                if ((object.ReferenceEquals(this.ListenersField, value) != true)) {
                    this.ListenersField = value;
                    this.RaisePropertyChanged("Listeners");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorResponse", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Extensibility")]
    [System.SerializableAttribute()]
    public partial class ErrorResponse : Cic.OpenLease.Service.MediatorService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EvaluateResponse", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.CASClient")]
    [System.SerializableAttribute()]
    public partial class EvaluateResponse : Cic.OpenLease.Service.MediatorService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransactionIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnCode {
            get {
                return this.ReturnCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnCodeField, value) != true)) {
                    this.ReturnCodeField = value;
                    this.RaisePropertyChanged("ReturnCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnMessage {
            get {
                return this.ReturnMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnMessageField, value) != true)) {
                    this.ReturnMessageField = value;
                    this.RaisePropertyChanged("ReturnMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransactionId {
            get {
                return this.TransactionIdField;
            }
            set {
                if ((this.TransactionIdField.Equals(value) != true)) {
                    this.TransactionIdField = value;
                    this.RaisePropertyChanged("TransactionId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExecutionReport", Namespace="http://schemas.datacontract.org/2004/07/CIC.Bas.Modules.OpenBPE.Engine")]
    [System.SerializableAttribute()]
    public partial class ExecutionReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AreaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.ListenerModel[] ListenersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.SubscriptionsDataDto ProcessContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessDefinitionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.ProcessInstanceModel ProcessInstanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AreaId {
            get {
                return this.AreaIdField;
            }
            set {
                if ((this.AreaIdField.Equals(value) != true)) {
                    this.AreaIdField = value;
                    this.RaisePropertyChanged("AreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventCode {
            get {
                return this.EventCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EventCodeField, value) != true)) {
                    this.EventCodeField = value;
                    this.RaisePropertyChanged("EventCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.ListenerModel[] Listeners {
            get {
                return this.ListenersField;
            }
            set {
                if ((object.ReferenceEquals(this.ListenersField, value) != true)) {
                    this.ListenersField = value;
                    this.RaisePropertyChanged("Listeners");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.SubscriptionsDataDto ProcessContext {
            get {
                return this.ProcessContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessContextField, value) != true)) {
                    this.ProcessContextField = value;
                    this.RaisePropertyChanged("ProcessContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessDefinitionCode {
            get {
                return this.ProcessDefinitionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessDefinitionCodeField, value) != true)) {
                    this.ProcessDefinitionCodeField = value;
                    this.RaisePropertyChanged("ProcessDefinitionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.ProcessInstanceModel ProcessInstance {
            get {
                return this.ProcessInstanceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessInstanceField, value) != true)) {
                    this.ProcessInstanceField = value;
                    this.RaisePropertyChanged("ProcessInstance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessInstanceModel", Namespace="http://schemas.datacontract.org/2004/07/CIC.OpenBPE.Storage.Models")]
    [System.SerializableAttribute()]
    public partial class ProcessInstanceModel : Cic.OpenLease.Service.MediatorService.ModelBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AreaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeletedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.ProcessInstanceState ExecutionStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FlowNodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsDepreciatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessDefinitionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessDefinitionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProcessIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ShouldBeKilledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TimestampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AreaId {
            get {
                return this.AreaIdField;
            }
            set {
                if ((this.AreaIdField.Equals(value) != true)) {
                    this.AreaIdField = value;
                    this.RaisePropertyChanged("AreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CaseId {
            get {
                return this.CaseIdField;
            }
            set {
                if ((this.CaseIdField.Equals(value) != true)) {
                    this.CaseIdField = value;
                    this.RaisePropertyChanged("CaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeletedAt {
            get {
                return this.DeletedAtField;
            }
            set {
                if ((this.DeletedAtField.Equals(value) != true)) {
                    this.DeletedAtField = value;
                    this.RaisePropertyChanged("DeletedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.ProcessInstanceState ExecutionStatus {
            get {
                return this.ExecutionStatusField;
            }
            set {
                if ((this.ExecutionStatusField.Equals(value) != true)) {
                    this.ExecutionStatusField = value;
                    this.RaisePropertyChanged("ExecutionStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FlowNodeId {
            get {
                return this.FlowNodeIdField;
            }
            set {
                if ((this.FlowNodeIdField.Equals(value) != true)) {
                    this.FlowNodeIdField = value;
                    this.RaisePropertyChanged("FlowNodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsDepreciated {
            get {
                return this.IsDepreciatedField;
            }
            set {
                if ((this.IsDepreciatedField.Equals(value) != true)) {
                    this.IsDepreciatedField = value;
                    this.RaisePropertyChanged("IsDepreciated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessDefinitionCode {
            get {
                return this.ProcessDefinitionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessDefinitionCodeField, value) != true)) {
                    this.ProcessDefinitionCodeField = value;
                    this.RaisePropertyChanged("ProcessDefinitionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessDefinitionId {
            get {
                return this.ProcessDefinitionIdField;
            }
            set {
                if ((this.ProcessDefinitionIdField.Equals(value) != true)) {
                    this.ProcessDefinitionIdField = value;
                    this.RaisePropertyChanged("ProcessDefinitionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProcessId {
            get {
                return this.ProcessIdField;
            }
            set {
                if ((this.ProcessIdField.Equals(value) != true)) {
                    this.ProcessIdField = value;
                    this.RaisePropertyChanged("ProcessId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ShouldBeKilled {
            get {
                return this.ShouldBeKilledField;
            }
            set {
                if ((this.ShouldBeKilledField.Equals(value) != true)) {
                    this.ShouldBeKilledField = value;
                    this.RaisePropertyChanged("ShouldBeKilled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListenerModel", Namespace="http://schemas.datacontract.org/2004/07/CIC.OpenBPE.Storage.Models")]
    [System.SerializableAttribute()]
    public partial class ListenerModel : Cic.OpenLease.Service.MediatorService.ModelBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AreaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePersistenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EvaluateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventDefinitionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExecutionHostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FlowNodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsUserTaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LaneNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ListenerDefinitionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProcessDefinitionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProcessIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProcessInstanceChildIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProcessInstanceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cic.OpenLease.Service.MediatorService.ListenerReasons ReasonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Cic.OpenLease.Service.MediatorService.ListenerState> StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Cic.OpenLease.Service.MediatorService.SupervisorTypes> SupervisorTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TokenIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AreaId {
            get {
                return this.AreaIdField;
            }
            set {
                if ((this.AreaIdField.Equals(value) != true)) {
                    this.AreaIdField = value;
                    this.RaisePropertyChanged("AreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePersistence {
            get {
                return this.EnablePersistenceField;
            }
            set {
                if ((this.EnablePersistenceField.Equals(value) != true)) {
                    this.EnablePersistenceField = value;
                    this.RaisePropertyChanged("EnablePersistence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EvaluateCode {
            get {
                return this.EvaluateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EvaluateCodeField, value) != true)) {
                    this.EvaluateCodeField = value;
                    this.RaisePropertyChanged("EvaluateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventCode {
            get {
                return this.EventCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EventCodeField, value) != true)) {
                    this.EventCodeField = value;
                    this.RaisePropertyChanged("EventCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventDefinitionCode {
            get {
                return this.EventDefinitionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EventDefinitionCodeField, value) != true)) {
                    this.EventDefinitionCodeField = value;
                    this.RaisePropertyChanged("EventDefinitionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecutionHost {
            get {
                return this.ExecutionHostField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutionHostField, value) != true)) {
                    this.ExecutionHostField = value;
                    this.RaisePropertyChanged("ExecutionHost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FlowNodeId {
            get {
                return this.FlowNodeIdField;
            }
            set {
                if ((this.FlowNodeIdField.Equals(value) != true)) {
                    this.FlowNodeIdField = value;
                    this.RaisePropertyChanged("FlowNodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsUserTask {
            get {
                return this.IsUserTaskField;
            }
            set {
                if ((this.IsUserTaskField.Equals(value) != true)) {
                    this.IsUserTaskField = value;
                    this.RaisePropertyChanged("IsUserTask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LaneName {
            get {
                return this.LaneNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LaneNameField, value) != true)) {
                    this.LaneNameField = value;
                    this.RaisePropertyChanged("LaneName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ListenerDefinitionId {
            get {
                return this.ListenerDefinitionIdField;
            }
            set {
                if ((this.ListenerDefinitionIdField.Equals(value) != true)) {
                    this.ListenerDefinitionIdField = value;
                    this.RaisePropertyChanged("ListenerDefinitionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProcessDefinitionId {
            get {
                return this.ProcessDefinitionIdField;
            }
            set {
                if ((this.ProcessDefinitionIdField.Equals(value) != true)) {
                    this.ProcessDefinitionIdField = value;
                    this.RaisePropertyChanged("ProcessDefinitionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProcessId {
            get {
                return this.ProcessIdField;
            }
            set {
                if ((this.ProcessIdField.Equals(value) != true)) {
                    this.ProcessIdField = value;
                    this.RaisePropertyChanged("ProcessId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProcessInstanceChildId {
            get {
                return this.ProcessInstanceChildIdField;
            }
            set {
                if ((this.ProcessInstanceChildIdField.Equals(value) != true)) {
                    this.ProcessInstanceChildIdField = value;
                    this.RaisePropertyChanged("ProcessInstanceChildId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProcessInstanceId {
            get {
                return this.ProcessInstanceIdField;
            }
            set {
                if ((this.ProcessInstanceIdField.Equals(value) != true)) {
                    this.ProcessInstanceIdField = value;
                    this.RaisePropertyChanged("ProcessInstanceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cic.OpenLease.Service.MediatorService.ListenerReasons Reasons {
            get {
                return this.ReasonsField;
            }
            set {
                if ((this.ReasonsField.Equals(value) != true)) {
                    this.ReasonsField = value;
                    this.RaisePropertyChanged("Reasons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Cic.OpenLease.Service.MediatorService.ListenerState> State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Cic.OpenLease.Service.MediatorService.SupervisorTypes> SupervisorTypes {
            get {
                return this.SupervisorTypesField;
            }
            set {
                if ((this.SupervisorTypesField.Equals(value) != true)) {
                    this.SupervisorTypesField = value;
                    this.RaisePropertyChanged("SupervisorTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TokenId {
            get {
                return this.TokenIdField;
            }
            set {
                if ((this.TokenIdField.Equals(value) != true)) {
                    this.TokenIdField = value;
                    this.RaisePropertyChanged("TokenId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModelBase", Namespace="http://schemas.datacontract.org/2004/07/CIC.OpenBPE.Storage.Models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.ProcessInstanceModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Cic.OpenLease.Service.MediatorService.ListenerModel))]
    public partial class ModelBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListenerReasons", Namespace="http://schemas.datacontract.org/2004/07/CIC.OpenBPE.Storage")]
    public enum ListenerReasons : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartEvent = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncorrectSupervisor = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoLanePermission = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingForEvent = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PersistenceMode = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupervisorTypes", Namespace="http://schemas.datacontract.org/2004/07/CIC.OpenBPE.Storage")]
    public enum SupervisorTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Generic = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FatClient = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobClient = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenLeaseClient = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabaseTrigger = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Service = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessInstanceState", Namespace="http://schemas.datacontract.org/2004/07/CIC.OpenBPE.Storage")]
    public enum ProcessInstanceState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToExecute = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Executing = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Killed = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Executed = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 99,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MediatorService.IMediatorService")]
    public interface IMediatorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediatorService/Execute", ReplyAction="http://tempuri.org/IMediatorService/ExecuteResponse")]
        Cic.OpenLease.Service.MediatorService.ResponseBase Execute(Cic.OpenLease.Service.MediatorService.RequestBase request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMediatorServiceChannel : Cic.OpenLease.Service.MediatorService.IMediatorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MediatorServiceClient : System.ServiceModel.ClientBase<Cic.OpenLease.Service.MediatorService.IMediatorService>, Cic.OpenLease.Service.MediatorService.IMediatorService {
        
        public MediatorServiceClient() {
        }
        
        public MediatorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MediatorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MediatorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MediatorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Cic.OpenLease.Service.MediatorService.ResponseBase Execute(Cic.OpenLease.Service.MediatorService.RequestBase request) {
            return base.Channel.Execute(request);
        }
    }
}
